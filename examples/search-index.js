var N=null,E="",T="t",U="u",searchIndex={};
var R=["duration","implfuture","result","Output","The type of value produced on completion.","Future","async_std","An error returned when an operation could not be completedвЂ¦","A locked reference to the Stderr handle.","repeat","read_until","Reads all bytes into `buf` until the delimiter `byte` orвЂ¦","readuntilfuture","read_line","Reads all bytes and appends them into `buf` until aвЂ¦","readlinefuture","Returns a stream over the lines of this byte stream.","Returns a stream over the contents of this reader split onвЂ¦","Reads some bytes from the byte stream.","readfuture","read_vectored","Like [`read`], except that it reads into a slice of buffers.","readvectoredfuture","read_to_end","Reads all bytes from the byte stream.","readtoendfuture","read_to_string","Reads all bytes from the byte stream and appends them intoвЂ¦","readtostringfuture","read_exact","Reads the exact number of bytes required to fill `buf`.","readexactfuture","Creates an adaptor which will read at most `limit` bytesвЂ¦","Creates a \"by reference\" adaptor for this instance ofвЂ¦","Transforms this `Read` instance to a `Stream` over itsвЂ¦","Creates an adaptor which will chain this stream withвЂ¦","Seeks to a new position in a byte stream.","seekfrom","seekfuture","Writes some bytes into the byte stream.","writefuture","Flushes the stream to ensure that all buffered contentsвЂ¦","flushfuture","write_vectored","Like [`write`], except that it writes from a slice ofвЂ¦","writevectoredfuture","write_all","Writes an entire buffer into the byte stream.","writeallfuture","write_fmt","Writes a formatted string into this writer, returning anyвЂ¦","arguments","writefmtfuture","async_std::io","bufreader","with_capacity","bufwriter","into_inner","get_ref","get_mut","string","Locks this handle to the standard error stream, returningвЂ¦","context","async_std::os::unix","unixdatagram","socketaddr","Receives data from the socket.","shutdown","incoming","local_addr","Creates an unnamed pair of connected sockets.","peer_addr","async_std::os","rawhandle","A trait to express the ability to consume an object andвЂ¦","async_std::os::windows","Waits for one of two similarly-typed futures to complete.","try_race","Waits for one of two similarly-typed fallible futures toвЂ¦","Waits for two similarly-typed futures to complete.","try_join","Waits for two similarly-typed fallible futures to complete.","throttle","Creates an stream which copies all of its elements.","enumerate","flatten","Returns the element that gives the minimum value withвЂ¦","Returns the element that gives the maximum value withвЂ¦","A combinator that applies a function to every element in aвЂ¦","timeout","position","Lexicographically compares the elements of this `Stream`вЂ¦","Determines if the elements of this `Stream` areвЂ¦","TimeoutError","A stream that merges two other streams into a single stream.","interval","Creates a new stream where to produce each new element aвЂ¦","successors","async_std::prelude","Advances the stream and returns the next value.","nextfuture","Creates a stream that yields its first `n` elements.","take_while","Creates a stream that yields elements based on a predicate.","takewhile","Limit the amount of items yielded per timeslice in a stream.","Creates a stream that yields each `step`th element.","Takes two streams and creates a new stream over both inвЂ¦","Creates a stream that yields the provided valuesвЂ¦","Creates a stream that gives the current element's count asвЂ¦","Takes a closure and creates a stream that calls thatвЂ¦","A combinator that does something with each element in theвЂ¦","Returns the last element of the stream.","lastfuture","Creates a stream which ends after the first `None`.","Creates a stream that uses a predicate to determine if anвЂ¦","Creates an stream that works like map, but flattens nestedвЂ¦","Creates an stream that flattens nested structure.","filter_map","Both filters and maps a stream.","filtermap","min_by_key","minbykeyfuture","max_by_key","maxbykeyfuture","minbyfuture","Returns the element that gives the maximum value. IfвЂ¦","maxfuture","Returns the element that gives the minimum value. IfвЂ¦","minfuture","maxbyfuture","Returns the nth element of the stream.","nthfuture","Tests if every element of the stream matches a predicate.","allfuture","Searches for an element in a stream that satisfies aвЂ¦","findfuture","Applies function to the elements of stream and returns theвЂ¦","findmapfuture","foldfuture","partition","partitionfuture","Call a closure on each element of the stream.","foreachfuture","Tests if any element of the stream matches a predicate.","anyfuture","Borrows an stream, rather than consuming it.","A stream adaptor similar to [`fold`] that holds internalвЂ¦","skip_while","Combinator that `skip`s elements based on a predicate.","skipwhile","Creates a combinator that skips the first `n` elements.","Await a stream or times out after a duration of time.","A combinator that applies a function as long as it returnsвЂ¦","tryfoldfuture","try_for_each","Applies a falliable function to each element in a stream,вЂ¦","tryforeachfuture","'Zips up' two streams into a single stream of pairs.","Converts an stream of pairs into a pair of containers.","unzipfuture","Transforms a stream into a collection.","Combines multiple streams into a single stream of allвЂ¦","partial_cmp","partialcmpfuture","Searches for an element in a Stream that satisfies aвЂ¦","positionfuture","cmpfuture","Counts the number of elements in the stream.","countfuture","Sums the elements of a stream.","Multiplies all elements of the stream.","async_std::stream","inspect","flat_map","find_map","for_each","try_fold","ordering","StreamExt","Extension methods for [`Stream`].","nefuture","gefuture","eqfuture","gtfuture","lefuture","ltfuture","Extends a collection with the contents of a stream.","intostream","IntoStream","Method which takes a stream and generates `Self` from theвЂ¦","mutexguard","rwlockreadguard","rwlockwriteguard","Returns a mutable reference to the underlying data.","Returns the channel capacity.","Returns `true` if the channel is empty.","Returns `true` if the channel is full.","Returns the number of messages in the channel.","joinhandle","accesserror","metadata","set_permissions","permissions","file_type","systemtime","Creates a blank set of options.","openoptions","Extracts a slice corresponding to the portion of the pathвЂ¦","ancestors","file_name","stripprefixerror","Creates an owned [`PathBuf`] like `self` but with theвЂ¦","components","symlink_metadata","canonicalize","Returns the canonical form of a path.","read_link","Returns `true` if the path exists on disk and is pointingвЂ¦","pathbuf","An IPv4 address.","An IPv6 address.","SocketAddr","An IPv4 socket address.","An IPv6 socket address.","Accepts a new incoming connection to this listener.","Returns a stream of incoming connections.","tosocketaddrs","Shuts down the read, write, or both halves of thisвЂ¦","Returns the local address that this listener is bound to.","recv_from","Sends data on the socket to the given address.","Gets the value of the `IP_TTL` option for this socket.","Sets the value for the `IP_TTL` option on this socket.","async_std::future","to_string","borrow_mut","clone_into","try_from","try_into","to_owned","type_id","async_std::os::unix::net","async_std::sync","async_std::task","async_std::fs","async_std::path","into_iter","async_std::net","async_std::pin","try_poll","try_poll_next","async_std::process","description","ipv6addr","addrparseerror","ipv4addr","from_str","socketaddrv4","socketaddrv6","to_socket_addrs","intoiter","formatter","component","exitstatus","errorkind","prefixcomponent","osstring","deref_mut","into_result","from_error","from_iter","generatorstate","poll_next","is_terminated","into_raw","size_hint","poll_flush","poll_close","poll_write","poll_write_vectored","poll_read","poll_read_vectored","poll_seek","poll_fill_buf","consume","as_raw_fd","from_raw_fd","into_raw_fd","custom_flags","as_raw_handle","from_raw_handle","into_raw_handle","from_stream","unixlistener","unixstream","tcplistener","tcpstream","udpsocket","intoiterator","next_back","timeouterror","repeatwith","default","dirbuilder","filetype","Returns a Future that delays execution for a specified time.","Flatten out the execution of this future when the resultвЂ¦","delayfuture","flattenfuture","Advance the internal cursor of the slice.","Attempt to read from the `AsyncRead` into `bufs` usingвЂ¦","Attempt to write bytes from `bufs` into the object usingвЂ¦","product","Returns the exact number of times the stream will iterate.","maybeuninit","assume_init","from_raw","strong_count","weak_count","Changes the success value of this `Poll` with the closureвЂ¦","Changes the error value of this `Poll` with the closureвЂ¦","as_os_str","is_unspecified","is_loopback","is_global","Returns [`true`] if the address appears to be globallyвЂ¦","is_multicast","is_documentation","Returns [`true`] if this address is in a range designatedвЂ¦","LOCALHOST","UNSPECIFIED","Returns [`true`] if the address is a unicast link-localвЂ¦","ipv6multicastscope","Returns [`true`] if the [IP address] in this `SocketAddr`вЂ¦","Returns the IP address associated with this socket address.","Changes the IP address associated with this socket address.","Returns the port number associated with this socket address.","Changes the port number associated with this socket address.","set_port","Unwraps this `Pin<P>` returning the underlying pointer.","Gets a mutable reference to the data inside of this `Pin`.","IntoFuture","ErrorKind","BufReadExt","BufReader","BufWriter","FromRawFd","IntoRawFd","DirBuilderExt","DirEntryExt","OpenOptionsExt","UnixDatagram","UnixListener","UnixStream","AsRawHandle","FromRawHandle","IntoRawHandle","FutureExt","DoubleEndedStream","ExactSizeStream","FromStream","BarrierWaitResult","JoinHandle","DirBuilder","OpenOptions","Permissions","Component","Components","TcpListener","TcpStream","UdpSocket","ToSocketAddrs","IoSliceMut","IntoInnerError","StderrLock","StdinLock","StdoutLock","Incoming","RepeatWith","SkipWhile","TakeWhile","Successors","MutexGuard","RwLockReadGuard","RwLockWriteGuard","AccessError","PrefixComponent","StripPrefixError","Ancestors","AddrParseError","SocketAddrV4","SocketAddrV6","ExitStatus"];

searchIndex["async_std"]={"doc":"Async version of the Rust standard library","i":[[23,"main",R[6],"Enables an async main function.",N,N],[23,"test",E,"Enables an async test function.",N,N],[14,"write",E,"Writes formatted data into a buffer.",N,N],[14,"writeln",E,"Write formatted data into a buffer, with a newline appended.",N,N],[0,"future",E,"Asynchronous values.",N,N],[3,R[93],R[234],"An error returned when a future times out.",N,N],[5,"pending",E,"Never resolves to a value.",N,[[]]],[5,"poll_fn",E,"Creates a new future wrapping around a function returningвЂ¦",N,[[["f"]]]],[5,"ready",E,"Resolves to the provided value.",N,[[[T]]]],[5,R[89],E,"Awaits a future or times out after a duration of time.",N,[[["f"],[R[0]]]]],[8,R[5],E,"A future represents an asynchronous computation.",N,N],[16,R[3],E,R[4],0,N],[10,"poll",E,"Attempt to resolve the future to a final value,вЂ¦",0,[[["pin"],["self"],[R[62]]],["poll"]]],[11,"delay",E,R[306],0,[[[R[0]]],[R[1]]]],[11,R[85],E,R[307],0,[[],[R[1]]]],[11,"race",E,R[76],0,[[["f"]],[R[1]]]],[11,R[77],E,R[78],0,[[["f"]],[R[1]]]],[11,"join",E,R[79],0,[[["f"]],[R[1]]]],[11,R[80],E,R[81],0,[[["f"]],[[R[2]],[R[1],[R[2]]]]]],[8,R[342],E,"Convert a type into a `Future`.",N,N],[16,R[3],E,R[4],1,N],[16,R[5],E,"Which kind of future are we turning this into?",1,N],[10,"into_future",E,"Create a future from a value",1,[[]]],[0,"io",R[6],"Traits, helpers, and type definitions for core I/OвЂ¦",N,N],[3,"Error",R[53],"The error type for I/O operations of the [`Read`],вЂ¦",N,N],[4,R[343],E,"A list specifying general categories of I/O error.",N,N],[13,"NotFound",E,"An entity was not found, often a file.",2,N],[13,"PermissionDenied",E,"The operation lacked the necessary privileges to complete.",2,N],[13,"ConnectionRefused",E,"The connection was refused by the remote server.",2,N],[13,"ConnectionReset",E,"The connection was reset by the remote server.",2,N],[13,"ConnectionAborted",E,"The connection was aborted (terminated) by the remoteвЂ¦",2,N],[13,"NotConnected",E,"The network operation failed because it was not connectedвЂ¦",2,N],[13,"AddrInUse",E,"A socket address could not be bound because the address isвЂ¦",2,N],[13,"AddrNotAvailable",E,"A nonexistent interface was requested or the requestedвЂ¦",2,N],[13,"BrokenPipe",E,"The operation failed because a pipe was closed.",2,N],[13,"AlreadyExists",E,"An entity already exists, often a file.",2,N],[13,"WouldBlock",E,"The operation needs to block to complete, but the blockingвЂ¦",2,N],[13,"InvalidInput",E,"A parameter was incorrect.",2,N],[13,"InvalidData",E,"Data not valid for the operation were encountered.",2,N],[13,"TimedOut",E,"The I/O operation's timeout expired, causing it to beвЂ¦",2,N],[13,"WriteZero",E,R[7],2,N],[13,"Interrupted",E,"This operation was interrupted.",2,N],[13,"Other",E,"Any I/O error not part of this list.",2,N],[13,"UnexpectedEof",E,R[7],2,N],[3,"IoSlice",E,"A buffer type used with `Write::write_vectored`.",N,N],[3,R[373],E,"A buffer type used with `Read::read_vectored`.",N,N],[6,"Result",E,"A specialized `Result` type for I/O operations.",N,N],[4,"SeekFrom",E,"Enumeration of possible methods to seek within an I/OвЂ¦",N,N],[13,"Start",E,"Sets the offset to the provided number of bytes.",3,N],[13,"End",E,"Sets the offset to the size of this object plus theвЂ¦",3,N],[13,"Current",E,"Sets the offset to the current position plus the specifiedвЂ¦",3,N],[3,"Lines",E,"A stream of lines in a byte stream.",N,N],[3,R[345],E,"Adds buffering to any reader.",N,N],[3,R[346],E,"Wraps a writer and buffers its output.",N,N],[3,R[374],E,"An error returned by `into_inner` which combines an errorвЂ¦",N,N],[3,"Cursor",E,"A `Cursor` wraps an in-memory buffer and provides it withвЂ¦",N,N],[3,"Empty",E,"A reader that contains no data.",N,N],[3,"Repeat",E,"A reader which yields one byte over and over and over andвЂ¦",N,N],[3,"Sink",E,"A writer that consumes and drops all data.",N,N],[3,"Stderr",E,"A handle to the standard error of the current process.",N,N],[3,"Stdin",E,"A handle to the standard input of the current process.",N,N],[3,"Stdout",E,"A handle to the standard output of the current process.",N,N],[3,R[375],E,R[8],N,N],[3,R[376],E,"A locked reference to the Stdin handle.",N,N],[3,R[377],E,R[8],N,N],[5,"copy",E,"Copies the entire contents of a reader into a writer.",N,[[["w"],["r"]]]],[5,"empty",E,"Creates a reader that contains no data.",N,[[],["empty"]]],[5,R[9],E,"Creates an instance of a reader that infinitely repeatsвЂ¦",N,[[["u8"]],[R[9]]]],[5,"sink",E,"Creates a writer that consumes and drops all data.",N,[[],["sink"]]],[5,"stderr",E,"Constructs a new handle to the standard error of theвЂ¦",N,[[],["stderr"]]],[5,"stdin",E,"Constructs a new handle to the standard input of theвЂ¦",N,[[],["stdin"]]],[5,"stdout",E,"Constructs a new handle to the standard output of theвЂ¦",N,[[],["stdout"]]],[5,R[89],E,"Awaits an I/O future or times out after a duration of time.",N,[[["f"],[R[0]]]]],[0,"prelude",E,"The async I/O prelude.",N,N],[8,R[344],"async_std::io::prelude","Extension methods for [`BufRead`].",N,N],[11,R[10],E,R[11],4,[[["vec"],["self"],["u8"]],[R[12]]]],[11,R[13],E,R[14],4,[[["self"],[R[60]]],[R[15]]]],[11,"lines",E,R[16],4,[[],["lines"]]],[11,"split",E,R[17],4,[[["u8"]],["split"]]],[8,"ReadExt",E,"Extension methods for [`Read`].",N,N],[11,"read",E,R[18],5,[[["self"]],[R[19]]]],[11,R[20],E,R[21],5,[[["self"]],[R[22]]]],[11,R[23],E,R[24],5,[[["vec"],["self"]],[R[25]]]],[11,R[26],E,R[27],5,[[["self"],[R[60]]],[R[28]]]],[11,R[29],E,R[30],5,[[["self"]],[R[31]]]],[11,"take",E,R[32],5,[[["u64"]],["take"]]],[11,"by_ref",E,R[33],5,[[["self"]],["self"]]],[11,"bytes",E,R[34],5,[[],["bytes"]]],[11,"chain",E,R[35],5,[[["read"]],[["chain"],["read"]]]],[8,"SeekExt",E,"Extension methods for [`Seek`].",N,N],[11,"seek",E,R[36],6,[[[R[37]],["self"]],[R[38]]]],[8,"WriteExt",E,"Extension methods for [`Write`].",N,N],[11,"write",E,R[39],7,[[["self"]],[R[40]]]],[11,"flush",E,R[41],7,[[["self"]],[R[42]]]],[11,R[43],E,R[44],7,[[["self"]],[R[45]]]],[11,R[46],E,R[47],7,[[["self"]],[R[48]]]],[11,R[49],E,R[50],7,[[["self"],[R[51]]],[R[52]]]],[11,R[10],E,R[11],4,[[["vec"],["self"],["u8"]],[R[12]]]],[11,R[13],E,R[14],4,[[["self"],[R[60]]],[R[15]]]],[11,"lines",E,R[16],4,[[],["lines"]]],[11,"split",E,R[17],4,[[["u8"]],["split"]]],[11,"read",E,R[18],5,[[["self"]],[R[19]]]],[11,R[20],E,R[21],5,[[["self"]],[R[22]]]],[11,R[23],E,R[24],5,[[["vec"],["self"]],[R[25]]]],[11,R[26],E,R[27],5,[[["self"],[R[60]]],[R[28]]]],[11,R[29],E,R[30],5,[[["self"]],[R[31]]]],[11,"take",E,R[32],5,[[["u64"]],["take"]]],[11,"by_ref",E,R[33],5,[[["self"]],["self"]]],[11,"bytes",E,R[34],5,[[],["bytes"]]],[11,"chain",E,R[35],5,[[["read"]],[["chain"],["read"]]]],[11,"seek",E,R[36],6,[[[R[37]],["self"]],[R[38]]]],[11,"write",E,R[39],7,[[["self"]],[R[40]]]],[11,"flush",E,R[41],7,[[["self"]],[R[42]]]],[11,R[43],E,R[44],7,[[["self"]],[R[45]]]],[11,R[46],E,R[47],7,[[["self"]],[R[48]]]],[11,R[49],E,R[50],7,[[["self"],[R[51]]],[R[52]]]],[11,"new",R[53],"Creates a buffered reader with default buffer capacity.",8,[[["r"]],[R[54]]]],[11,R[55],E,"Creates a new buffered reader with the specified capacity.",8,[[["usize"],["r"]],[R[54]]]],[11,R[58],E,"Gets a reference to the underlying reader.",8,[[["self"]],["r"]]],[11,R[59],E,"Gets a mutable reference to the underlying reader.",8,[[["self"]],["r"]]],[11,"buffer",E,"Returns a reference to the internal buffer.",8,[[["self"]]]],[11,R[57],E,"Unwraps the buffered reader, returning the underlyingвЂ¦",8,[[],["r"]]],[11,"new",E,"Creates a new `BufWriter` with a default buffer capacity.вЂ¦",9,[[["w"]],[R[56]]]],[11,R[55],E,"Creates a new `BufWriter` with the specified bufferвЂ¦",9,[[["w"],["usize"]],[R[56]]]],[11,R[58],E,"Gets a reference to the underlying writer.",9,[[["self"]],["w"]]],[11,R[59],E,"Gets a mutable reference to the underlying writer.",9,[[["self"]],["w"]]],[11,R[57],E,"Consumes BufWriter, returning the underlying writer",9,[[]]],[11,"buffer",E,"Returns a reference to the internally buffered data.",9,[[["self"]]]],[11,"new",E,"Creates a new cursor wrapping the provided underlyingвЂ¦",10,[[[T]],["cursor"]]],[11,R[57],E,"Consumes this cursor, returning the underlying value.",10,[[],[T]]],[11,R[58],E,"Gets a reference to the underlying value in this cursor.",10,[[["self"]],[T]]],[11,R[59],E,"Gets a mutable reference to the underlying value in thisвЂ¦",10,[[["self"]],[T]]],[11,R[90],E,"Returns the current position of this cursor.",10,[[["self"]],["u64"]]],[11,"set_position",E,"Sets the position of this cursor.",10,[[["self"],["u64"]]]],[11,"lock",E,R[61],11,[[["self"]]]],[11,R[13],E,"Reads a line of input into the specified buffer.",12,[[[R[60]],["self"]]]],[11,"lock",E,"Locks this handle to the standard input stream, returningвЂ¦",12,[[["self"]]]],[11,"lock",E,R[61],13,[[["self"]]]],[8,"BufRead",E,"Allows reading from a buffered byte stream.",N,N],[10,R[284],E,"Returns the contents of the internal buffer, filling itвЂ¦",14,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[10,R[285],E,"Tells this buffer that `amt` bytes have been consumed fromвЂ¦",14,[[["pin"],["self"],["usize"]]]],[11,R[10],E,R[11],14,[[["vec"],["self"],["u8"]],[[R[1],["usize"]],["usize"]]]],[11,R[13],E,R[14],14,[[["self"],[R[60]]],[[R[2],["usize"]],[R[1],[R[2]]]]]],[11,"lines",E,R[16],14,[[],["lines"]]],[11,"split",E,R[17],14,[[["u8"]],["split"]]],[8,"Read",E,"Allows reading from a byte stream.",N,N],[10,R[281],E,"Attempt to read from the `AsyncRead` into `buf`.",15,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[282],E,R[311],15,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,"read",E,R[18],15,[[["self"]],[[R[2],["usize"]],[R[1],[R[2]]]]]],[11,R[20],E,R[21],15,[[["self"]],[[R[2],["usize"]],[R[1],[R[2]]]]]],[11,R[23],E,R[24],15,[[["vec"],["self"]],[[R[2],["usize"]],[R[1],[R[2]]]]]],[11,R[26],E,R[27],15,[[["self"],[R[60]]],[[R[2],["usize"]],[R[1],[R[2]]]]]],[11,R[29],E,R[30],15,[[["self"]],[[R[1],[R[2]]],[R[2]]]]],[11,"take",E,R[32],15,[[["u64"]],["take"]]],[11,"by_ref",E,R[33],15,[[["self"]],["self"]]],[11,"bytes",E,R[34],15,[[],["bytes"]]],[11,"chain",E,R[35],15,[[["read"]],[["chain"],["read"]]]],[8,"Seek",E,"Allows seeking through a byte stream.",N,N],[10,R[283],E,"Attempt to seek to an offset, in bytes, in a stream.",16,[[["pin"],[R[37]],["self"],[R[62]]],[[R[2],["u64"]],["poll",[R[2]]]]]],[11,"seek",E,R[36],16,[[[R[37]],["self"]],[[R[1],[R[2]]],[R[2],["u64"]]]]],[8,"Write",E,"Allows writing to a byte stream.",N,N],[10,R[279],E,"Attempt to write bytes from `buf` into the object.",17,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[280],E,R[312],17,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[10,R[277],E,"Attempt to flush the object, ensuring that any bufferedвЂ¦",17,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[10,R[278],E,"Attempt to close the object.",17,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,"write",E,R[39],17,[[["self"]],[[R[2],["usize"]],[R[1],[R[2]]]]]],[11,"flush",E,R[41],17,[[["self"]],[[R[1],[R[2]]],[R[2]]]]],[11,R[43],E,R[44],17,[[["self"]],[[R[2],["usize"]],[R[1],[R[2]]]]]],[11,R[46],E,R[47],17,[[["self"]],[[R[1],[R[2]]],[R[2]]]]],[11,R[49],E,R[50],17,[[["self"],[R[51]]],[[R[1],[R[2]]],[R[2]]]]],[0,"os",R[6],"OS-specific extensions.",N,N],[0,"unix",R[72],"Platform-specific extensions for Unix platforms.",N,N],[0,"io",R[63],"Unix-specific I/O extensions.",N,N],[6,"RawFd","async_std::os::unix::io","Raw file descriptors.",N,N],[8,"AsRawFd",E,"A trait to extract the raw unix file descriptor from anвЂ¦",N,N],[10,R[286],E,"Extracts the raw file descriptor.",18,[[["self"]],["rawfd"]]],[8,R[347],E,"A trait to express the ability to construct an object fromвЂ¦",N,N],[10,R[287],E,"Constructs a new instance of `Self` from the given rawвЂ¦",19,[[["rawfd"]],["self"]]],[8,R[348],E,R[74],N,N],[10,R[288],E,"Consumes this object, returning the raw underlying fileвЂ¦",20,[[],["rawfd"]]],[0,"fs",R[63],"Unix-specific filesystem extensions.",N,N],[5,"symlink","async_std::os::unix::fs","Creates a new symbolic link on the filesystem.",N,[[["asref",["path"]],["path"]]]],[8,R[349],E,"Unix-specific extensions to `DirBuilder`.",N,N],[10,"mode",E,"Sets the mode to create new directories with. This optionвЂ¦",21,[[["self"],["u32"]],["self"]]],[8,R[350],E,"Unix-specific extension methods for `DirEntry`.",N,N],[10,"ino",E,"Returns the underlying `d_ino` field in the containedвЂ¦",22,[[["self"]],["u64"]]],[8,R[351],E,"Unix-specific extensions to `OpenOptions`.",N,N],[10,"mode",E,"Sets the mode bits that a new file will be created with.",23,[[["self"],["u32"]],["self"]]],[10,R[289],E,"Pass custom flags to the `flags` argument of `open`.",23,[[["self"],["i32"]],["self"]]],[0,"net",R[63],"Unix-specific networking extensions.",N,N],[3,R[352],R[242],"A Unix datagram socket.",N,N],[3,R[378],E,"A stream of incoming Unix domain socket connections.",N,N],[3,R[353],E,"A Unix domain socket server, listening for connections.",N,N],[3,R[354],E,"A Unix stream socket.",N,N],[3,R[222],E,"An address associated with a Unix socket.",N,N],[11,"bind",E,"Creates a Unix datagram socket bound to the given path.",24,[[["asref",["path"]],["path"]]]],[11,"unbound",E,"Creates a Unix datagram which is not bound to any address.",24,[[],[[R[2],[R[64]]],[R[64]]]]],[11,"pair",E,R[70],24,[[],[R[2]]]],[11,"connect",E,"Connects the socket to the specified address.",24,[[["self"],["asref",["path"]],["path"]]]],[11,R[69],E,"Returns the address of this socket.",24,[[["self"]],[[R[2],[R[65]]],[R[65]]]]],[11,R[71],E,"Returns the address of this socket's peer.",24,[[["self"]],[[R[2],[R[65]]],[R[65]]]]],[11,R[230],E,R[66],24,[[["self"]]]],[11,"recv",E,R[66],24,[[["self"]]]],[11,"send_to",E,"Sends data on the socket to the specified address.",24,[[["self"],["path"],["asref",["path"]]]]],[11,"send",E,"Sends data on the socket to the socket's peer.",24,[[["self"]]]],[11,R[67],E,"Shut down the read, write, or both halves of thisвЂ¦",24,[[["self"],[R[67]]],[R[2]]]],[11,"bind",E,"Creates a Unix datagram listener bound to the given path.",25,[[["asref",["path"]],["path"]]]],[11,"accept",E,R[225],25,[[["self"]]]],[11,R[68],E,R[226],25,[[["self"]],[R[68]]]],[11,R[69],E,"Returns the local socket address of this listener.",25,[[["self"]],[[R[2],[R[65]]],[R[65]]]]],[11,"connect",E,"Connects to the socket to the specified address.",26,[[["asref",["path"]],["path"]]]],[11,"pair",E,R[70],26,[[],[R[2]]]],[11,R[69],E,"Returns the socket address of the local half of thisвЂ¦",26,[[["self"]],[[R[2],[R[65]]],[R[65]]]]],[11,R[71],E,"Returns the socket address of the remote half of thisвЂ¦",26,[[["self"]],[[R[2],[R[65]]],[R[65]]]]],[11,R[67],E,R[228],26,[[["self"],[R[67]]],[R[2]]]],[11,"is_unnamed",E,"Returns `true` if the address is unnamed.",27,[[["self"]],["bool"]]],[11,"as_pathname",E,"Returns the contents of this address if it is a `pathname`вЂ¦",27,[[["self"]],[["path"],["option",["path"]]]]],[0,"windows",R[72],"Platform-specific extensions for Windows.",N,N],[0,"io",R[75],"Windows-specific I/O extensions.",N,N],[6,"RawHandle","async_std::os::windows::io","Raw HANDLEs.",N,N],[6,"RawSocket",E,"Raw SOCKETs.",N,N],[8,R[355],E,"Extracts raw handles.",N,N],[10,R[290],E,"Extracts the raw handle, without taking any ownership.",28,[[["self"]],[R[73]]]],[8,R[356],E,"Construct I/O objects from raw handles.",N,N],[10,R[291],E,"Constructs a new I/O object from the specified raw handle.",29,[[[R[73]]],["self"]]],[8,R[357],E,R[74],N,N],[10,R[292],E,"Consumes this object, returning the raw underlying handle.",30,[[],[R[73]]]],[0,"fs",R[75],"Windows-specific filesystem extensions.",N,N],[5,"symlink_dir","async_std::os::windows::fs","Creates a new directory symbolic link on the filesystem.",N,[[["asref",["path"]],["path"]]]],[5,"symlink_file",E,"Creates a new file symbolic link on the filesystem.",N,[[["asref",["path"]],["path"]]]],[0,"prelude",R[6],"The async prelude.",N,N],[8,R[358],R[98],"Extension methods for [`Future`].",N,N],[11,"delay",E,E,31,[[[R[0]]],[R[308]]]],[11,R[85],E,E,31,[[],[R[309]]]],[11,"race",E,R[76],31,[[["f"]],["race"]]],[11,R[77],E,R[78],31,[[["f"]],["tryrace"]]],[11,"join",E,R[79],31,[[["f"]],["join"]]],[11,R[80],E,R[81],31,[[["f"]],["tryjoin"]]],[8,R[179],E,R[180],N,N],[11,"next",E,R[99],32,[[["self"]],[R[100]]]],[11,"take",E,R[101],32,[[["usize"]],["take"]]],[11,R[102],E,R[103],32,[[["p"]],[R[104]]]],[11,R[82],E,R[105],32,[[[R[0]]],[R[82]]]],[11,"step_by",E,R[106],32,[[["usize"]],["stepby"]]],[11,"chain",E,R[107],32,[[[U]],["chain"]]],[11,"cloned",E,R[83],32,[[],["cloned"]]],[11,"copied",E,R[83],32,[[],["copied"]]],[11,"cycle",E,R[108],32,[[],["cycle"]]],[11,R[84],E,R[109],32,[[],[R[84]]]],[11,"map",E,R[110],32,[[["f"]],["map"]]],[11,R[173],E,R[111],32,[[["f"]],[R[173]]]],[11,"last",E,R[112],32,[[],[R[113]]]],[11,"fuse",E,R[114],32,[[],["fuse"]]],[11,"filter",E,R[115],32,[[["p"]],["filter"]]],[11,R[174],E,R[116],32,[[["f"]],["flatmap"]]],[11,R[85],E,R[117],32,[[],[R[85]]]],[11,R[118],E,R[119],32,[[["f"]],[R[120]]]],[11,R[121],E,R[86],32,[[["f"]],[R[122]]]],[11,R[123],E,R[87],32,[[["f"]],[R[124]]]],[11,"min_by",E,R[86],32,[[["f"]],[R[125]]]],[11,"max",E,R[126],32,[[],[R[127]]]],[11,"min",E,R[128],32,[[],[R[129]]]],[11,"max_by",E,R[87],32,[[["f"]],[R[130]]]],[11,"nth",E,R[131],32,[[["self"],["usize"]],[R[132]]]],[11,"all",E,R[133],32,[[["self"],["f"]],[R[134]]]],[11,"find",E,R[135],32,[[["self"],["p"]],[R[136]]]],[11,R[175],E,R[137],32,[[["self"],["f"]],[R[138]]]],[11,"fold",E,R[88],32,[[["b"],["f"]],[R[139]]]],[11,R[140],E,R[88],32,[[["f"]],[R[141]]]],[11,R[176],E,R[142],32,[[["f"]],[R[143]]]],[11,"any",E,R[144],32,[[["self"],["f"]],[R[145]]]],[11,"by_ref",E,R[146],32,[[["self"]],["self"]]],[11,"scan",E,R[147],32,[[["f"],["st"]],["scan"]]],[11,R[148],E,R[149],32,[[["p"]],[R[150]]]],[11,"skip",E,R[151],32,[[["usize"]],["skip"]]],[11,R[89],E,R[152],32,[[[R[0]]],[R[89]]]],[11,R[177],E,R[153],32,[[["self"],[T],["f"]],[R[154]]]],[11,R[155],E,R[156],32,[[["self"],["f"]],[R[157]]]],[11,"zip",E,R[158],32,[[[U]],["zip"]]],[11,"unzip",E,R[159],32,[[],[R[160]]]],[11,"collect",E,R[161],32,[[],[["pin",["box"]],["box",["future"]]]]],[11,"merge",E,R[162],32,[[[U]],["merge"]]],[11,R[163],E,R[91],32,[[["s"]],[R[164]]]],[11,R[90],E,R[165],32,[[["self"],["p"]],[R[166]]]],[11,"cmp",E,R[91],32,[[["s"]],[R[167]]]],[11,"count",E,R[168],32,[[],[R[169]]]],[11,"ne",E,R[92],32,[[["s"]],[R[181]]]],[11,"ge",E,R[92],32,[[["s"]],[R[182]]]],[11,"eq",E,R[92],32,[[["s"]],[R[183]]]],[11,"gt",E,R[92],32,[[["s"]],[R[184]]]],[11,"le",E,R[92],32,[[["s"]],[R[185]]]],[11,"lt",E,R[92],32,[[["s"]],[R[186]]]],[11,"sum",E,R[170],32,[[],[["pin",["box"]],["box",["future"]]]]],[11,R[313],E,R[171],32,[[],[["box",["future"]],["pin",["box"]]]]],[0,"stream",R[6],"Composable asynchronous iteration.",N,N],[3,"Empty",R[172],"A stream that doesn't yield any items.",N,N],[3,"FromFn",E,"A stream that yields elements by calling a closure.",N,N],[3,"FromIter",E,"A stream that was created from iterator.",N,N],[3,"Once",E,"A stream that yields a single item.",N,N],[3,"Repeat",E,"A stream that yields the same item repeatedly.",N,N],[3,R[379],E,"A stream that repeats elements of type `T` endlessly byвЂ¦",N,N],[3,"Chain",E,"A stream that chains two streams one after another.",N,N],[3,"Cloned",E,"A stream that clones the elements of an underlying stream.",N,N],[3,"Copied",E,"A stream that copies the elements of an underlying stream.",N,N],[3,"Filter",E,"A stream to filter elements of another stream with aвЂ¦",N,N],[3,"Fuse",E,"A stream that yields `None` forever after the underlyingвЂ¦",N,N],[3,"Inspect",E,"A stream that does something with each element of anotherвЂ¦",N,N],[3,"Map",E,"A stream that maps value of another stream with a function.",N,N],[3,"Scan",E,"A stream to maintain state while polling another stream.",N,N],[3,"Skip",E,"A stream to skip first n elements of another stream.",N,N],[3,R[380],E,"A stream to skip elements of another stream based on aвЂ¦",N,N],[3,"StepBy",E,"A stream that steps a given amount of elements of anotherвЂ¦",N,N],[3,"Take",E,"A stream that yields the first `n` items of another stream.",N,N],[3,R[381],E,"A stream that yields elements based on a predicate.",N,N],[3,"Zip",E,"A stream that takes items from two other streamsвЂ¦",N,N],[3,"Merge",E,R[94],N,N],[3,"Flatten",E,"A stream that flattens one level of nesting in an streamвЂ¦",N,N],[3,"FlatMap",E,"A stream that maps each element to a stream, and yieldsвЂ¦",N,N],[3,R[93],E,"An error returned when a stream times out.",N,N],[3,"Timeout",E,"A stream with timeout time set",N,N],[3,"Interval",E,"A stream representing notifications at fixed interval",N,N],[3,"Merge",E,R[94],N,N],[3,R[382],E,"A stream that yields elements by calling an async closureвЂ¦",N,N],[5,"empty",E,"Creates a stream that doesn't yield any items.",N,[[],["empty"]]],[5,"from_fn",E,R[96],N,[[["f"]],["fromfn"]]],[5,R[271],E,"Converts an iterator into a stream.",N,[[[R[299]]],["fromiter"]]],[5,"once",E,"Creates a stream that yields a single item.",N,[[[T]],["once"]]],[5,R[9],E,"Creates a stream that yields the same item repeatedly.",N,[[[T]],[R[9]]]],[5,"repeat_with",E,"Creates a new stream that repeats elements of type `A`вЂ¦",N,[[["f"]],[R[302]]]],[5,"extend",E,R[187],N,[[["c"],["s"]]]],[5,R[95],E,"Creates a new stream that yields at a set interval.",N,[[[R[0]]],[R[95]]]],[5,R[97],E,R[96],N,[[["f"],["option"]],[R[97]]]],[11,"next",R[98],R[99],32,[[["self"]],[R[100]]]],[11,"take",E,R[101],32,[[["usize"]],["take"]]],[11,R[102],E,R[103],32,[[["p"]],[R[104]]]],[11,R[82],E,R[105],32,[[[R[0]]],[R[82]]]],[11,"step_by",E,R[106],32,[[["usize"]],["stepby"]]],[11,"chain",E,R[107],32,[[[U]],["chain"]]],[11,"cloned",E,R[83],32,[[],["cloned"]]],[11,"copied",E,R[83],32,[[],["copied"]]],[11,"cycle",E,R[108],32,[[],["cycle"]]],[11,R[84],E,R[109],32,[[],[R[84]]]],[11,"map",E,R[110],32,[[["f"]],["map"]]],[11,R[173],E,R[111],32,[[["f"]],[R[173]]]],[11,"last",E,R[112],32,[[],[R[113]]]],[11,"fuse",E,R[114],32,[[],["fuse"]]],[11,"filter",E,R[115],32,[[["p"]],["filter"]]],[11,R[174],E,R[116],32,[[["f"]],["flatmap"]]],[11,R[85],E,R[117],32,[[],[R[85]]]],[11,R[118],E,R[119],32,[[["f"]],[R[120]]]],[11,R[121],E,R[86],32,[[["f"]],[R[122]]]],[11,R[123],E,R[87],32,[[["f"]],[R[124]]]],[11,"min_by",E,R[86],32,[[["f"]],[R[125]]]],[11,"max",E,R[126],32,[[],[R[127]]]],[11,"min",E,R[128],32,[[],[R[129]]]],[11,"max_by",E,R[87],32,[[["f"]],[R[130]]]],[11,"nth",E,R[131],32,[[["self"],["usize"]],[R[132]]]],[11,"all",E,R[133],32,[[["self"],["f"]],[R[134]]]],[11,"find",E,R[135],32,[[["self"],["p"]],[R[136]]]],[11,R[175],E,R[137],32,[[["self"],["f"]],[R[138]]]],[11,"fold",E,R[88],32,[[["b"],["f"]],[R[139]]]],[11,R[140],E,R[88],32,[[["f"]],[R[141]]]],[11,R[176],E,R[142],32,[[["f"]],[R[143]]]],[11,"any",E,R[144],32,[[["self"],["f"]],[R[145]]]],[11,"by_ref",E,R[146],32,[[["self"]],["self"]]],[11,"scan",E,R[147],32,[[["f"],["st"]],["scan"]]],[11,R[148],E,R[149],32,[[["p"]],[R[150]]]],[11,"skip",E,R[151],32,[[["usize"]],["skip"]]],[11,R[89],E,R[152],32,[[[R[0]]],[R[89]]]],[11,R[177],E,R[153],32,[[["self"],[T],["f"]],[R[154]]]],[11,R[155],E,R[156],32,[[["self"],["f"]],[R[157]]]],[11,"zip",E,R[158],32,[[[U]],["zip"]]],[11,"unzip",E,R[159],32,[[],[R[160]]]],[11,"collect",E,R[161],32,[[],[["pin",["box"]],["box",["future"]]]]],[11,"merge",E,R[162],32,[[[U]],["merge"]]],[11,R[163],E,R[91],32,[[["s"]],[R[164]]]],[11,R[90],E,R[165],32,[[["self"],["p"]],[R[166]]]],[11,"cmp",E,R[91],32,[[["s"]],[R[167]]]],[11,"count",E,R[168],32,[[],[R[169]]]],[11,"ne",E,R[92],32,[[["s"]],[R[181]]]],[11,"ge",E,R[92],32,[[["s"]],[R[182]]]],[11,"eq",E,R[92],32,[[["s"]],[R[183]]]],[11,"gt",E,R[92],32,[[["s"]],[R[184]]]],[11,"le",E,R[92],32,[[["s"]],[R[185]]]],[11,"lt",E,R[92],32,[[["s"]],[R[186]]]],[11,"sum",E,R[170],32,[[],[["pin",["box"]],["box",["future"]]]]],[11,R[313],E,R[171],32,[[],[["box",["future"]],["pin",["box"]]]]],[8,"Stream",R[172],"An asynchronous stream of values.",N,N],[16,"Item",E,"The type of items yielded by this stream.",33,N],[10,R[273],E,"Attempts to receive the next item from the stream.",33,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,"next",E,R[99],33,[[["self"]],[["option"],[R[1],["option"]]]]],[11,"take",E,R[101],33,[[["usize"]],["take"]]],[11,R[102],E,R[103],33,[[["p"]],[R[104]]]],[11,R[82],E,R[105],33,[[[R[0]]],[R[82]]]],[11,"step_by",E,R[106],33,[[["usize"]],["stepby"]]],[11,"chain",E,R[107],33,[[[U]],["chain"]]],[11,"cloned",E,R[83],33,[[],["cloned"]]],[11,"copied",E,R[83],33,[[],["copied"]]],[11,"cycle",E,R[108],33,[[],["cycle"]]],[11,R[84],E,R[109],33,[[],[R[84]]]],[11,"map",E,R[110],33,[[["f"]],["map"]]],[11,R[173],E,R[111],33,[[["f"]],[R[173]]]],[11,"last",E,R[112],33,[[],[["option"],[R[1],["option"]]]]],[11,"fuse",E,R[114],33,[[],["fuse"]]],[11,"filter",E,R[115],33,[[["p"]],["filter"]]],[11,R[174],E,R[116],33,[[["f"]],["flatmap"]]],[11,R[85],E,R[117],33,[[],[R[85]]]],[11,R[118],E,R[119],33,[[["f"]],[R[120]]]],[11,R[121],E,R[86],33,[[["f"]],[["option"],[R[1],["option"]]]]],[11,R[123],E,R[87],33,[[["f"]],[["option"],[R[1],["option"]]]]],[11,"min_by",E,R[86],33,[[["f"]],[["option"],[R[1],["option"]]]]],[11,"max",E,R[126],33,[[],[["option"],[R[1],["option"]]]]],[11,"min",E,R[128],33,[[],[["option"],[R[1],["option"]]]]],[11,"max_by",E,R[87],33,[[["f"]],[["option"],[R[1],["option"]]]]],[11,"nth",E,R[131],33,[[["self"],["usize"]],[["option"],[R[1],["option"]]]]],[11,"all",E,R[133],33,[[["self"],["f"]],[[R[1],["bool"]],["bool"]]]],[11,"find",E,R[135],33,[[["self"],["p"]],[["option"],[R[1],["option"]]]]],[11,R[175],E,R[137],33,[[["self"],["f"]],[[R[1],["option"]],["option"]]]],[11,"fold",E,R[88],33,[[["b"],["f"]],[R[1]]]],[11,R[140],E,R[88],33,[[["f"]],[R[1]]]],[11,R[176],E,R[142],33,[[["f"]],[R[1]]]],[11,"any",E,R[144],33,[[["self"],["f"]],[[R[1],["bool"]],["bool"]]]],[11,"by_ref",E,R[146],33,[[["self"]],["self"]]],[11,"scan",E,R[147],33,[[["f"],["st"]],["scan"]]],[11,R[148],E,R[149],33,[[["p"]],[R[150]]]],[11,"skip",E,R[151],33,[[["usize"]],["skip"]]],[11,R[89],E,R[152],33,[[[R[0]]],[R[89]]]],[11,R[177],E,R[153],33,[[["self"],[T],["f"]],[[R[1],[R[2]]],[R[2]]]]],[11,R[155],E,R[156],33,[[["self"],["f"]],[R[1]]]],[11,"zip",E,R[158],33,[[[U]],["zip"]]],[11,"unzip",E,R[159],33,[[],[R[1]]]],[11,"collect",E,R[161],33,[[],[R[1]]]],[11,"merge",E,R[162],33,[[[U]],["merge"]]],[11,R[163],E,R[91],33,[[["s"]],[["option",[R[178]]],[R[1],["option"]]]]],[11,R[90],E,R[165],33,[[["self"],["p"]],[["option",["usize"]],[R[1],["option"]]]]],[11,"cmp",E,R[91],33,[[["s"]],[[R[1],[R[178]]],[R[178]]]]],[11,"count",E,R[168],33,[[],[[R[1],["usize"]],["usize"]]]],[11,"ne",E,R[92],33,[[["s"]],[[R[1],["bool"]],["bool"]]]],[11,"ge",E,R[92],33,[[["s"]],[[R[1],["bool"]],["bool"]]]],[11,"eq",E,R[92],33,[[["s"]],[[R[1],["bool"]],["bool"]]]],[11,"gt",E,R[92],33,[[["s"]],[[R[1],["bool"]],["bool"]]]],[11,"le",E,R[92],33,[[["s"]],[[R[1],["bool"]],["bool"]]]],[11,"lt",E,R[92],33,[[["s"]],[[R[1],["bool"]],["bool"]]]],[11,"sum",E,R[170],33,[[],[R[1]]]],[11,R[313],E,R[171],33,[[],[R[1]]]],[8,R[179],E,R[180],N,N],[11,"next",R[98],R[99],32,[[["self"]],[R[100]]]],[11,"take",E,R[101],32,[[["usize"]],["take"]]],[11,R[102],E,R[103],32,[[["p"]],[R[104]]]],[11,R[82],E,R[105],32,[[[R[0]]],[R[82]]]],[11,"step_by",E,R[106],32,[[["usize"]],["stepby"]]],[11,"chain",E,R[107],32,[[[U]],["chain"]]],[11,"cloned",E,R[83],32,[[],["cloned"]]],[11,"copied",E,R[83],32,[[],["copied"]]],[11,"cycle",E,R[108],32,[[],["cycle"]]],[11,R[84],E,R[109],32,[[],[R[84]]]],[11,"map",E,R[110],32,[[["f"]],["map"]]],[11,R[173],E,R[111],32,[[["f"]],[R[173]]]],[11,"last",E,R[112],32,[[],[R[113]]]],[11,"fuse",E,R[114],32,[[],["fuse"]]],[11,"filter",E,R[115],32,[[["p"]],["filter"]]],[11,R[174],E,R[116],32,[[["f"]],["flatmap"]]],[11,R[85],E,R[117],32,[[],[R[85]]]],[11,R[118],E,R[119],32,[[["f"]],[R[120]]]],[11,R[121],E,R[86],32,[[["f"]],[R[122]]]],[11,R[123],E,R[87],32,[[["f"]],[R[124]]]],[11,"min_by",E,R[86],32,[[["f"]],[R[125]]]],[11,"max",E,R[126],32,[[],[R[127]]]],[11,"min",E,R[128],32,[[],[R[129]]]],[11,"max_by",E,R[87],32,[[["f"]],[R[130]]]],[11,"nth",E,R[131],32,[[["self"],["usize"]],[R[132]]]],[11,"all",E,R[133],32,[[["self"],["f"]],[R[134]]]],[11,"find",E,R[135],32,[[["self"],["p"]],[R[136]]]],[11,R[175],E,R[137],32,[[["self"],["f"]],[R[138]]]],[11,"fold",E,R[88],32,[[["b"],["f"]],[R[139]]]],[11,R[140],E,R[88],32,[[["f"]],[R[141]]]],[11,R[176],E,R[142],32,[[["f"]],[R[143]]]],[11,"any",E,R[144],32,[[["self"],["f"]],[R[145]]]],[11,"by_ref",E,R[146],32,[[["self"]],["self"]]],[11,"scan",E,R[147],32,[[["f"],["st"]],["scan"]]],[11,R[148],E,R[149],32,[[["p"]],[R[150]]]],[11,"skip",E,R[151],32,[[["usize"]],["skip"]]],[11,R[89],E,R[152],32,[[[R[0]]],[R[89]]]],[11,R[177],E,R[153],32,[[["self"],[T],["f"]],[R[154]]]],[11,R[155],E,R[156],32,[[["self"],["f"]],[R[157]]]],[11,"zip",E,R[158],32,[[[U]],["zip"]]],[11,"unzip",E,R[159],32,[[],[R[160]]]],[11,"collect",E,R[161],32,[[],[["pin",["box"]],["box",["future"]]]]],[11,"merge",E,R[162],32,[[[U]],["merge"]]],[11,R[163],E,R[91],32,[[["s"]],[R[164]]]],[11,R[90],E,R[165],32,[[["self"],["p"]],[R[166]]]],[11,"cmp",E,R[91],32,[[["s"]],[R[167]]]],[11,"count",E,R[168],32,[[],[R[169]]]],[11,"ne",E,R[92],32,[[["s"]],[R[181]]]],[11,"ge",E,R[92],32,[[["s"]],[R[182]]]],[11,"eq",E,R[92],32,[[["s"]],[R[183]]]],[11,"gt",E,R[92],32,[[["s"]],[R[184]]]],[11,"le",E,R[92],32,[[["s"]],[R[185]]]],[11,"lt",E,R[92],32,[[["s"]],[R[186]]]],[11,"sum",E,R[170],32,[[],[["pin",["box"]],["box",["future"]]]]],[11,R[313],E,R[171],32,[[],[["box",["future"]],["pin",["box"]]]]],[8,R[359],R[172],"A stream able to yield elements from both ends.",N,N],[10,"poll_next_back",E,"Removes and returns an element from the end of the stream.",34,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[8,R[360],E,"A stream that knows its exact length.",N,N],[11,"len",E,R[314],35,[[["self"]],["usize"]]],[8,"Extend",E,R[187],N,N],[10,"extend",E,R[187],36,[[["self"],[R[188]]],[["box",["future"]],["pin",["box"]]]]],[8,R[361],E,"Conversion from a `Stream`.",N,N],[10,R[293],E,"Creates a value from a stream.",37,[[[R[188]]],[["box",["future"]],["pin",["box"]]]]],[8,"FusedStream",E,"A stream that always continues to yield `None` whenвЂ¦",N,N],[8,R[189],E,"Conversion into a `Stream`.",N,N],[16,"Item",E,"The type of the elements being iterated over.",38,N],[16,R[189],E,"Which kind of stream are we turning this into?",38,N],[10,"into_stream",E,"Creates a stream from a value.",38,[[]]],[8,"Product",E,"Trait to represent types that can be created byвЂ¦",N,N],[10,R[313],E,R[190],39,[[["s"]],[["box",["future"]],["pin",["box"]]]]],[8,"Sum",E,"Trait to represent types that can be created by summing upвЂ¦",N,N],[10,"sum",E,R[190],40,[[["s"]],[["box",["future"]],["pin",["box"]]]]],[0,"sync",R[6],"Synchronization primitives.",N,N],[3,"Arc",R[243],"A thread-safe reference-counting pointer. 'Arc' stands forвЂ¦",N,N],[3,"Weak",E,"`Weak` is a version of [`Arc`] that holds a non-owningвЂ¦",N,N],[3,"Mutex",E,"A mutual exclusion primitive for protecting shared data.",N,N],[3,R[383],E,"A guard that releases the lock when dropped.",N,N],[3,"RwLock",E,"A reader-writer lock for protecting shared data.",N,N],[3,R[384],E,"A guard that releases the read lock when dropped.",N,N],[3,R[385],E,"A guard that releases the write lock when dropped.",N,N],[3,"Barrier",E,"A barrier enables multiple tasks to synchronize theвЂ¦",N,N],[3,R[362],E,"A `BarrierWaitResult` is returned by `wait` when allвЂ¦",N,N],[3,"Sender",E,"The sending side of a channel.",N,N],[3,"Receiver",E,"The receiving side of a channel.",N,N],[5,"channel",E,"Creates a bounded multi-producer multi-consumer channel.",N,[[["usize"]]]],[11,"new",E,"Creates a new mutex.",41,[[[T]],["mutex"]]],[11,"lock",E,"Acquires the lock.",41,[[["self"]]]],[11,"try_lock",E,"Attempts to acquire the lock.",41,[[["self"]],[[R[191]],["option",[R[191]]]]]],[11,R[57],E,"Consumes the mutex, returning the underlying data.",41,[[],[T]]],[11,R[59],E,R[194],41,[[["self"]],[T]]],[11,"new",E,"Creates a new reader-writer lock.",42,[[[T]],["rwlock"]]],[11,"read",E,"Acquires a read lock.",42,[[["self"]]]],[11,"try_read",E,"Attempts to acquire a read lock.",42,[[["self"]],[[R[192]],["option",[R[192]]]]]],[11,"write",E,"Acquires a write lock.",42,[[["self"]]]],[11,"try_write",E,"Attempts to acquire a write lock.",42,[[["self"]],[["option",[R[193]]],[R[193]]]]],[11,R[57],E,"Consumes the lock, returning the underlying data.",42,[[],[T]]],[11,R[59],E,R[194],42,[[["self"]],[T]]],[11,"new",E,"Creates a new barrier that can block a given number ofвЂ¦",43,[[["usize"]],["barrier"]]],[11,"wait",E,"Blocks the current task until all tasks have rendezvousedвЂ¦",43,[[["self"]]]],[11,"is_leader",E,"Returns `true` if this task from [`wait`] is the \"leaderвЂ¦",44,[[["self"]],["bool"]]],[11,"send",E,"Sends a message into the channel.",45,[[["self"],[T]]]],[11,"capacity",E,R[195],45,[[["self"]],["usize"]]],[11,"is_empty",E,R[196],45,[[["self"]],["bool"]]],[11,"is_full",E,R[197],45,[[["self"]],["bool"]]],[11,"len",E,R[198],45,[[["self"]],["usize"]]],[11,"recv",E,"Receives a message from the channel.",46,[[["self"]]]],[11,"capacity",E,R[195],46,[[["self"]],["usize"]]],[11,"is_empty",E,R[196],46,[[["self"]],["bool"]]],[11,"is_full",E,R[197],46,[[["self"]],["bool"]]],[11,"len",E,R[198],46,[[["self"]],["usize"]]],[0,"task",R[6],"Types and traits for working with asynchronous tasks.",N,N],[3,"Context",R[244],"The `Context` of an asynchronous task.",N,N],[4,"Poll",E,"Indicates whether a value is available or if the currentвЂ¦",N,N],[13,"Ready",E,"Represents that a value is immediately ready.",47,N],[13,"Pending",E,"Represents that a value is not ready yet.",47,N],[3,"Waker",E,"A `Waker` is a handle for waking up a task by notifyingвЂ¦",N,N],[14,"ready",E,"Extracts the successful type of a `Poll<T>`.",N,N],[3,"Builder",E,"Task builder that configures the settings of a new task.",N,N],[3,"Task",E,"A handle to a task.",N,N],[3,"TaskId",E,"A unique identifier for a task.",N,N],[3,R[363],E,"A handle that awaits the result of a task.",N,N],[3,R[386],E,"An error returned by [`LocalKey::try_with`].",N,N],[3,"LocalKey",E,"The key for accessing a task-local value.",N,N],[5,"yield_now",E,"Cooperatively gives up a timeslice to the task scheduler.",N,[[]]],[5,"block_on",E,"Spawns a task and blocks the current thread on its result.",N,[[["f"]],[T]]],[5,"current",E,"Returns a handle to the current task.",N,[[],["task"]]],[5,"sleep",E,"Sleeps for the specified amount of time.",N,[[[R[0]]]]],[5,"spawn",E,"Spawns a task.",N,[[["f"]],[R[199]]]],[5,"spawn_blocking",E,"Spawns a blocking task.",N,[[["f"]],[R[199]]]],[11,"new",E,"Creates a new builder.",48,[[],["builder"]]],[11,"name",E,"Configures the name of the task.",48,[[[R[60]]],["builder"]]],[11,"spawn",E,"Spawns a task with the configured settings.",48,[[["f"]],[[R[199]],[R[2],[R[199]]]]]],[11,"task",E,"Returns a handle to the underlying task.",49,[[["self"]],["task"]]],[11,"id",E,"Gets the task's unique identifier.",50,[[["self"]],["taskid"]]],[11,"name",E,"Returns the name of this task.",50,[[["self"]],[["option",["str"]],["str"]]]],[11,"with",E,"Gets a reference to the task-local value with this key.",51,[[["self"],["f"]],["r"]]],[11,"try_with",E,"Attempts to get a reference to the task-local value withвЂ¦",51,[[["self"],["f"]],[[R[2],[R[200]]],[R[200]]]]],[0,"fs",R[6],"Filesystem manipulation operations.",N,N],[3,R[364],R[245],"A builder for creating directories with configurableвЂ¦",N,N],[3,"DirEntry",E,"An entry in a directory.",N,N],[3,"File",E,"An open file on the filesystem.",N,N],[3,"FileType",E,"The type of a file or directory.",N,N],[3,"Metadata",E,"Metadata for a file or directory.",N,N],[3,R[365],E,"A builder for opening files with configurable options.",N,N],[3,R[366],E,"A set of permissions on a file or directory.",N,N],[3,"ReadDir",E,"A stream of entries in a directory.",N,N],[5,R[215],E,R[216],N,[[["asref",["path"]],["path"]]]],[5,"copy",E,"Copies the contents and permissions of a file to a newвЂ¦",N,[[["asref",["path"]],["path"]]]],[5,"create_dir",E,"Creates a new directory.",N,[[["asref",["path"]],["path"]]]],[5,"create_dir_all",E,"Creates a new directory and all of its parents if they areвЂ¦",N,[[["asref",["path"]],["path"]]]],[5,"hard_link",E,"Creates a hard link on the filesystem.",N,[[["asref",["path"]],["path"]]]],[5,R[201],E,"Reads metadata for a path.",N,[[["asref",["path"]],["path"]]]],[5,"read",E,"Reads the entire contents of a file as raw bytes.",N,[[["asref",["path"]],["path"]]]],[5,"read_dir",E,"Returns a stream of entries in a directory.",N,[[["asref",["path"]],["path"]]]],[5,R[217],E,"Reads a symbolic link and returns the path it points to.",N,[[["asref",["path"]],["path"]]]],[5,R[26],E,"Reads the entire contents of a file as a string.",N,[[["asref",["path"]],["path"]]]],[5,"remove_dir",E,"Removes an empty directory.",N,[[["asref",["path"]],["path"]]]],[5,"remove_dir_all",E,"Removes a directory and all of its contents.",N,[[["asref",["path"]],["path"]]]],[5,"remove_file",E,"Removes a file.",N,[[["asref",["path"]],["path"]]]],[5,"rename",E,"Renames a file or directory to a new location.",N,[[["asref",["path"]],["path"]]]],[5,R[202],E,"Changes the permissions of a file or directory.",N,[[[R[203]],["asref",["path"]],["path"]]]],[5,R[214],E,"Reads metadata for a path without following symbolic links.",N,[[["asref",["path"]],["path"]]]],[5,"write",E,"Writes a slice of bytes as the new contents of a file.",N,[[["path"],["asref"],["asref",["path"]]]]],[11,"new",E,R[206],52,[[],[R[304]]]],[11,"recursive",E,"Sets the option for recursive mode.",52,[[["self"],["bool"]],["self"]]],[11,"create",E,"Creates a directory with the configured options.",52,[[["path"],["self"],["asref",["path"]]]]],[11,"path",E,"Returns the full path to this entry.",53,[[["self"]],[R[219]]]],[11,R[201],E,"Reads the metadata for this entry.",53,[[["self"]]]],[11,R[204],E,"Reads the file type for this entry.",53,[[["self"]]]],[11,R[210],E,"Returns the bare name of this entry without the leadingвЂ¦",53,[[["self"]],[R[267]]]],[11,"open",E,"Opens a file in read-only mode.",54,[[["asref",["path"]],["path"]]]],[11,"create",E,"Opens a file in write-only mode.",54,[[["asref",["path"]],["path"]]]],[11,"sync_all",E,"Synchronizes OS-internal buffered contents and metadata toвЂ¦",54,[[["self"]]]],[11,"sync_data",E,"Synchronizes OS-internal buffered contents to disk.",54,[[["self"]]]],[11,"set_len",E,"Truncates or extends the file.",54,[[["self"],["u64"]]]],[11,R[201],E,"Reads the file's metadata.",54,[[["self"]]]],[11,R[202],E,"Changes the permissions on the file.",54,[[["self"],[R[203]]]]],[11,"is_dir",E,"Returns `true` if this file type represents a regularвЂ¦",55,[[["self"]],["bool"]]],[11,"is_file",E,"Returns `true` if this file type represents a regular file.",55,[[["self"]],["bool"]]],[11,"is_symlink",E,"Returns `true` if this file type represents a symbolic link.",55,[[["self"]],["bool"]]],[11,R[204],E,"Returns the file type from this metadata.",56,[[["self"]],[R[305]]]],[11,"is_dir",E,"Returns `true` if this metadata is for a regular directory.",56,[[["self"]],["bool"]]],[11,"is_file",E,"Returns `true` if this metadata is for a regular file.",56,[[["self"]],["bool"]]],[11,"len",E,"Returns the file size in bytes.",56,[[["self"]],["u64"]]],[11,R[203],E,"Returns the permissions from this metadata.",56,[[["self"]],[R[203]]]],[11,"modified",E,"Returns the last modification time.",56,[[["self"]],[[R[2],[R[205]]],[R[205]]]]],[11,"accessed",E,"Returns the last access time.",56,[[["self"]],[[R[2],[R[205]]],[R[205]]]]],[11,"created",E,"Returns the creation time.",56,[[["self"]],[[R[2],[R[205]]],[R[205]]]]],[11,"new",E,R[206],57,[[],[R[207]]]],[11,"read",E,"Configures the option for read mode.",57,[[["self"],["bool"]],[R[207]]]],[11,"write",E,"Configures the option for write mode.",57,[[["self"],["bool"]],[R[207]]]],[11,"append",E,"Configures the option for append mode.",57,[[["self"],["bool"]],[R[207]]]],[11,"truncate",E,"Configures the option for truncating the previous file.",57,[[["self"],["bool"]],[R[207]]]],[11,"create",E,"Configures the option for creating a new file if itвЂ¦",57,[[["self"],["bool"]],[R[207]]]],[11,"create_new",E,"Configures the option for creating a new file or failingвЂ¦",57,[[["self"],["bool"]],[R[207]]]],[11,"open",E,"Opens a file with the configured options.",57,[[["path"],["self"],["asref",["path"]]]]],[11,"readonly",E,"Returns the read-only flag.",58,[[["self"]],["bool"]]],[11,"set_readonly",E,"Configures the read-only flag.",58,[[["self"],["bool"]]]],[0,"path",R[6],"Cross-platform path manipulation.",N,N],[5,"is_separator",R[246],"Determines whether the character is one of the permittedвЂ¦",N,[[["char"]],["bool"]]],[4,R[367],E,"A single component of a path.",N,N],[13,"Prefix",E,"A Windows path prefix, e.g., `C:` or `\\\\server\\share`.",59,N],[13,"RootDir",E,"The root directory component, appears after any prefix andвЂ¦",59,N],[13,"CurDir",E,"A reference to the current directory, i.e., `.`.",59,N],[13,"ParentDir",E,"A reference to the parent directory, i.e., `..`.",59,N],[13,"Normal",E,"A normal component, e.g., `a` and `b` in `a/b`.",59,N],[3,"Display",E,"Helper struct for safely printing paths with [`format!`]вЂ¦",N,N],[4,"Prefix",E,"Windows path prefixes, e.g., `C:` or `\\\\server\\share`.",N,N],[13,"Verbatim",E,"Verbatim prefix, e.g., `\\\\?\\cat_pics`.",60,N],[13,"VerbatimUNC",E,"Verbatim prefix using Windows' Uniform Naming Convention,вЂ¦",60,N],[13,"VerbatimDisk",E,"Verbatim disk prefix, e.g., `\\\\?\\C:\\`.",60,N],[13,"DeviceNS",E,"Device namespace prefix, e.g., `\\\\.\\COM42`.",60,N],[13,"UNC",E,"Prefix using Windows' Uniform Naming Convention, e.g.вЂ¦",60,N],[13,"Disk",E,"Prefix `C:` for the given disk drive.",60,N],[3,R[387],E,"A structure wrapping a Windows path prefix as well as itsвЂ¦",N,N],[3,R[388],E,"An error returned fromвЂ¦",N,N],[17,"MAIN_SEPARATOR",E,"The primary separator of path components for the currentвЂ¦",N,N],[3,R[389],E,"An iterator over [`Path`] and its ancestors.",N,N],[3,R[368],E,"An iterator over the [`Component`]s of a [`Path`].",N,N],[3,"Iter",E,"An iterator over the [`Component`]s of a [`Path`], asвЂ¦",N,N],[3,"Path",E,"A slice of a path.",N,N],[3,"PathBuf",E,"This struct is an async version of [`std::path::PathBuf`].",N,N],[11,"as_path",E,R[208],61,[[["self"]],["path"]]],[11,"as_path",E,R[208],62,[[["self"]],["path"]]],[11,"new",E,"Directly wraps a string slice as a `Path` slice.",63,[[["s"]],["path"]]],[11,R[322],E,"Returns the underlying [`OsStr`] slice.",63,[[["self"]],["osstr"]]],[11,"to_str",E,"Returns a [`&str`] slice if the `Path` is valid unicode.",63,[[["self"]],[["option",["str"]],["str"]]]],[11,"to_string_lossy",E,"Converts a `Path` to a [`Cow<str>`].",63,[[["self"]],[["str"],["cow",["str"]]]]],[11,"to_path_buf",E,"Converts a `Path` to an owned [`PathBuf`].",63,[[["self"]],[R[219]]]],[11,"is_absolute",E,"Returns `true` if the `Path` is absolute, i.e. if it isвЂ¦",63,[[["self"]],["bool"]]],[11,"is_relative",E,"Returns `true` if the `Path` is relative, i.e. not absolute.",63,[[["self"]],["bool"]]],[11,"has_root",E,"Returns `true` if the `Path` has a root.",63,[[["self"]],["bool"]]],[11,"parent",E,"Returns the `Path` without its final component, if thereвЂ¦",63,[[["self"]],[["path"],["option",["path"]]]]],[11,R[209],E,"Produces an iterator over `Path` and its ancestors.",63,[[["self"]],[R[209]]]],[11,R[210],E,"Returns the final component of the `Path`, if there is one.",63,[[["self"]],[["option",["osstr"]],["osstr"]]]],[11,"strip_prefix",E,"Returns a path that becomes `self` when joined onto `base`.",63,[[["self"],["p"]],[["path"],[R[211]],[R[2],["path",R[211]]]]]],[11,"starts_with",E,"Determines whether `base` is a prefix of `self`.",63,[[["path"],["self"],["asref",["path"]]],["bool"]]],[11,"ends_with",E,"Determines whether `child` is a suffix of `self`.",63,[[["path"],["self"],["asref",["path"]]],["bool"]]],[11,"file_stem",E,"Extracts the stem (non-extension) portion of [`file_name`].",63,[[["self"]],[["option",["osstr"]],["osstr"]]]],[11,"extension",E,"Extracts the extension of [`file_name`], if possible.",63,[[["self"]],[["option",["osstr"]],["osstr"]]]],[11,"join",E,"Creates an owned [`PathBuf`] with `path` adjoined to `self`.",63,[[["path"],["self"],["asref",["path"]]],[R[219]]]],[11,"with_file_name",E,R[212],63,[[["asref",["osstr"]],["self"],["osstr"]],[R[219]]]],[11,"with_extension",E,R[212],63,[[["asref",["osstr"]],["self"],["osstr"]],[R[219]]]],[11,R[213],E,"Produces an iterator over the [`Component`]s of the path.",63,[[["self"]],[R[213]]]],[11,"iter",E,"Produces an iterator over the path's components viewed asвЂ¦",63,[[["self"]],["iter"]]],[11,"display",E,"Returns an object that implements [`Display`] for safelyвЂ¦",63,[[["self"]],["display"]]],[11,R[201],E,"Reads the metadata of a file or directory.",63,[[["self"]]]],[11,R[214],E,"Reads the metadata of a file or directory withoutвЂ¦",63,[[["self"]]]],[11,R[215],E,R[216],63,[[["self"]]]],[11,R[217],E,"Reads a symbolic link, returning the file that the linkвЂ¦",63,[[["self"]]]],[11,"read_dir",E,"Returns a stream over the entries within a directory.",63,[[["self"]]]],[11,"exists",E,"Returns `true` if the path points at an existing entity.",63,[[["self"]]]],[11,"is_file",E,R[218],63,[[["self"]]]],[11,"is_dir",E,R[218],63,[[["self"]]]],[11,"into_path_buf",E,"Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] withoutвЂ¦",63,[[["box",["path"]],["path"]],[R[219]]]],[11,"new",E,"Allocates an empty `PathBuf`.",64,[[],[R[219]]]],[11,"as_path",E,"Coerces to a [`Path`] slice.",64,[[["self"]],["path"]]],[11,"push",E,"Extends `self` with `path`.",64,[[["self"],["asref",["path"]],["path"]]]],[11,"pop",E,"Truncates `self` to [`self.parent`].",64,[[["self"]],["bool"]]],[11,"set_file_name",E,"Updates [`self.file_name`] to `file_name`.",64,[[["asref",["osstr"]],["self"],["osstr"]]]],[11,"set_extension",E,"Updates [`self.extension`] to `extension`.",64,[[["asref",["osstr"]],["self"],["osstr"]],["bool"]]],[11,"into_os_string",E,"Consumes the `PathBuf`, returning its internalвЂ¦",64,[[],[R[267]]]],[11,"into_boxed_path",E,"Converts this `PathBuf` into a [boxed][`Box`] [`Path`].",64,[[],[["box",["path"]],["path"]]]],[0,"net",R[6],"Networking primitives for TCP/UDP communication.",N,N],[3,R[390],R[248],"An error which can be returned when parsing an IP addressвЂ¦",N,N],[4,"Shutdown",E,"Possible values which can be passed to the [`shutdown`]вЂ¦",N,N],[13,"Read",E,"The reading portion of the [`TcpStream`] should be shutвЂ¦",65,N],[13,"Write",E,"The writing portion of the [`TcpStream`] should be shutвЂ¦",65,N],[13,"Both",E,"Both the reading and the writing portions of theвЂ¦",65,N],[4,"IpAddr",E,"An IP address, either IPv4 or IPv6.",N,N],[13,"V4",E,R[220],66,N],[13,"V6",E,R[221],66,N],[3,"Ipv4Addr",E,R[220],N,N],[3,"Ipv6Addr",E,R[221],N,N],[4,R[222],E,"An internet socket address, either IPv4 or IPv6.",N,N],[13,"V4",E,R[223],67,N],[13,"V6",E,R[224],67,N],[3,R[391],E,R[223],N,N],[3,R[392],E,R[224],N,N],[3,R[378],E,"A stream of incoming TCP connections.",N,N],[3,R[369],E,"A TCP socket server, listening for connections.",N,N],[3,R[370],E,"A TCP stream between a local and a remote socket.",N,N],[3,R[371],E,"A UDP socket.",N,N],[11,"bind",E,"Creates a new `TcpListener` which will be bound to theвЂ¦",68,[[[R[227]]]]],[11,"accept",E,R[225],68,[[["self"]]]],[11,R[68],E,R[226],68,[[["self"]],[R[68]]]],[11,R[69],E,R[229],68,[[["self"]],[[R[65]],[R[2],[R[65]]]]]],[11,"connect",E,"Creates a new TCP stream connected to the specified address.",69,[[[R[227]]]]],[11,R[69],E,"Returns the local address that this stream is connected to.",69,[[["self"]],[[R[65]],[R[2],[R[65]]]]]],[11,R[71],E,"Returns the remote address that this stream is connected to.",69,[[["self"]],[[R[65]],[R[2],[R[65]]]]]],[11,"ttl",E,R[232],69,[[["self"]],[[R[2],["u32"]],["u32"]]]],[11,"set_ttl",E,R[233],69,[[["u32"],["self"]],[R[2]]]],[11,"peek",E,"Receives data on the socket from the remote address toвЂ¦",69,[[["self"]]]],[11,"nodelay",E,"Gets the value of the `TCP_NODELAY` option on this socket.",69,[[["self"]],[["bool"],[R[2],["bool"]]]]],[11,"set_nodelay",E,"Sets the value of the `TCP_NODELAY` option on this socket.",69,[[["self"],["bool"]],[R[2]]]],[11,R[67],E,R[228],69,[[[R[67]],["self"]],[R[2]]]],[11,"bind",E,"Creates a UDP socket from the given address.",70,[[[R[227]]]]],[11,R[69],E,R[229],70,[[["self"]],[[R[65]],[R[2],[R[65]]]]]],[11,"send_to",E,R[231],70,[[["self"],[R[227]]]]],[11,R[230],E,R[66],70,[[["self"]]]],[11,"connect",E,"Connects the UDP socket to a remote address.",70,[[["self"],[R[227]]]]],[11,"send",E,R[231],70,[[["self"]]]],[11,"recv",E,R[66],70,[[["self"]]]],[11,"broadcast",E,"Gets the value of the `SO_BROADCAST` option for this socket.",70,[[["self"]],[["bool"],[R[2],["bool"]]]]],[11,"set_broadcast",E,"Sets the value of the `SO_BROADCAST` option for this socket.",70,[[["self"],["bool"]],[R[2]]]],[11,"multicast_loop_v4",E,"Gets the value of the `IP_MULTICAST_LOOP` option for thisвЂ¦",70,[[["self"]],[["bool"],[R[2],["bool"]]]]],[11,"set_multicast_loop_v4",E,"Sets the value of the `IP_MULTICAST_LOOP` option for thisвЂ¦",70,[[["self"],["bool"]],[R[2]]]],[11,"multicast_ttl_v4",E,"Gets the value of the `IP_MULTICAST_TTL` option for thisвЂ¦",70,[[["self"]],[[R[2],["u32"]],["u32"]]]],[11,"set_multicast_ttl_v4",E,"Sets the value of the `IP_MULTICAST_TTL` option for thisвЂ¦",70,[[["u32"],["self"]],[R[2]]]],[11,"multicast_loop_v6",E,"Gets the value of the `IPV6_MULTICAST_LOOP` option forвЂ¦",70,[[["self"]],[["bool"],[R[2],["bool"]]]]],[11,"set_multicast_loop_v6",E,"Sets the value of the `IPV6_MULTICAST_LOOP` option forвЂ¦",70,[[["self"],["bool"]],[R[2]]]],[11,"ttl",E,R[232],70,[[["self"]],[[R[2],["u32"]],["u32"]]]],[11,"set_ttl",E,R[233],70,[[["u32"],["self"]],[R[2]]]],[11,"join_multicast_v4",E,"Executes an operation of the `IP_ADD_MEMBERSHIP` type.",70,[[[R[256]],["self"]],[R[2]]]],[11,"join_multicast_v6",E,"Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",70,[[[R[254]],["self"],["u32"]],[R[2]]]],[11,"leave_multicast_v4",E,"Executes an operation of the `IP_DROP_MEMBERSHIP` type.",70,[[[R[256]],["self"]],[R[2]]]],[11,"leave_multicast_v6",E,"Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",70,[[[R[254]],["self"],["u32"]],[R[2]]]],[8,R[372],E,"Converts or resolves addresses to [`SocketAddr`] values.",N,N],[16,"Iter",E,"Returned iterator over socket addresses which this typeвЂ¦",71,N],[10,R[260],E,"Converts this object to an iterator of resolvedвЂ¦",71,[[["self"]],[R[1]]]],[0,"pin",R[6],"Types that pin data to its location in memory.",N,N],[3,"Pin",R[249],"A pinned pointer.",N,N],[0,"process",R[6],"A module for working with processes.",N,N],[3,R[393],R[252],"Describes the result of a process after it has terminated.",N,N],[3,R[3],E,"The output of a finished process.",N,N],[12,"status",E,"The status (exit code) of the process.",72,N],[12,"stdout",E,"The data that the process wrote to stdout.",72,N],[12,"stderr",E,"The data that the process wrote to stderr.",72,N],[5,"abort",E,"Terminates the process in an abnormal fashion.",N,[[]]],[5,"exit",E,"Terminates the current process with the specified exit code.",N,[[["i32"]]]],[5,"id",E,"Returns the OS-assigned process identifier associated withвЂ¦",N,[[],["u32"]]],[14,"print",R[6],"Prints to the standard output.",N,N],[14,"println",E,"Prints to the standard output, with a newline.",N,N],[14,"eprint",E,"Prints to the standard error.",N,N],[14,"eprintln",E,"Prints to the standard error, with a newline.",N,N],[14,"task_local",E,"Declares task-local values.",N,N],[11,"into",R[234],E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[240],E,E,73,[[["self"]],[T]]],[11,R[237],E,E,73,[[["self"],[T]]]],[11,R[235],E,E,73,[[["self"]],[R[60]]]],[11,R[238],E,E,73,[[[U]],[R[2]]]],[11,R[239],E,E,73,[[],[R[2]]]],[11,"borrow",E,E,73,[[["self"]],[T]]],[11,R[236],E,E,73,[[["self"]],[T]]],[11,R[241],E,E,73,[[["self"]],["typeid"]]],[11,"into",R[53],E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[235],E,E,74,[[["self"]],[R[60]]]],[11,R[238],E,E,74,[[[U]],[R[2]]]],[11,R[239],E,E,74,[[],[R[2]]]],[11,"borrow",E,E,74,[[["self"]],[T]]],[11,R[236],E,E,74,[[["self"]],[T]]],[11,R[241],E,E,74,[[["self"]],["typeid"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[240],E,E,2,[[["self"]],[T]]],[11,R[237],E,E,2,[[["self"],[T]]]],[11,R[238],E,E,2,[[[U]],[R[2]]]],[11,R[239],E,E,2,[[],[R[2]]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[236],E,E,2,[[["self"]],[T]]],[11,R[241],E,E,2,[[["self"]],["typeid"]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[238],E,E,75,[[[U]],[R[2]]]],[11,R[239],E,E,75,[[],[R[2]]]],[11,"borrow",E,E,75,[[["self"]],[T]]],[11,R[236],E,E,75,[[["self"]],[T]]],[11,R[241],E,E,75,[[["self"]],["typeid"]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[238],E,E,76,[[[U]],[R[2]]]],[11,R[239],E,E,76,[[],[R[2]]]],[11,"borrow",E,E,76,[[["self"]],[T]]],[11,R[236],E,E,76,[[["self"]],[T]]],[11,R[241],E,E,76,[[["self"]],["typeid"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[240],E,E,3,[[["self"]],[T]]],[11,R[237],E,E,3,[[["self"],[T]]]],[11,R[238],E,E,3,[[[U]],[R[2]]]],[11,R[239],E,E,3,[[],[R[2]]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[236],E,E,3,[[["self"]],[T]]],[11,R[241],E,E,3,[[["self"]],["typeid"]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[238],E,E,77,[[[U]],[R[2]]]],[11,R[239],E,E,77,[[],[R[2]]]],[11,"borrow",E,E,77,[[["self"]],[T]]],[11,R[236],E,E,77,[[["self"]],[T]]],[11,R[241],E,E,77,[[["self"]],["typeid"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[238],E,E,8,[[[U]],[R[2]]]],[11,R[239],E,E,8,[[],[R[2]]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[236],E,E,8,[[["self"]],[T]]],[11,R[241],E,E,8,[[["self"]],["typeid"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[238],E,E,9,[[[U]],[R[2]]]],[11,R[239],E,E,9,[[],[R[2]]]],[11,"borrow",E,E,9,[[["self"]],[T]]],[11,R[236],E,E,9,[[["self"]],[T]]],[11,R[241],E,E,9,[[["self"]],["typeid"]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[238],E,E,78,[[[U]],[R[2]]]],[11,R[239],E,E,78,[[],[R[2]]]],[11,"borrow",E,E,78,[[["self"]],[T]]],[11,R[236],E,E,78,[[["self"]],[T]]],[11,R[241],E,E,78,[[["self"]],["typeid"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[240],E,E,10,[[["self"]],[T]]],[11,R[237],E,E,10,[[["self"],[T]]]],[11,R[238],E,E,10,[[[U]],[R[2]]]],[11,R[239],E,E,10,[[],[R[2]]]],[11,"borrow",E,E,10,[[["self"]],[T]]],[11,R[236],E,E,10,[[["self"]],[T]]],[11,R[241],E,E,10,[[["self"]],["typeid"]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[238],E,E,79,[[[U]],[R[2]]]],[11,R[239],E,E,79,[[],[R[2]]]],[11,"borrow",E,E,79,[[["self"]],[T]]],[11,R[236],E,E,79,[[["self"]],[T]]],[11,R[241],E,E,79,[[["self"]],["typeid"]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[238],E,E,80,[[[U]],[R[2]]]],[11,R[239],E,E,80,[[],[R[2]]]],[11,"borrow",E,E,80,[[["self"]],[T]]],[11,R[236],E,E,80,[[["self"]],[T]]],[11,R[241],E,E,80,[[["self"]],["typeid"]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[238],E,E,81,[[[U]],[R[2]]]],[11,R[239],E,E,81,[[],[R[2]]]],[11,"borrow",E,E,81,[[["self"]],[T]]],[11,R[236],E,E,81,[[["self"]],[T]]],[11,R[241],E,E,81,[[["self"]],["typeid"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[238],E,E,11,[[[U]],[R[2]]]],[11,R[239],E,E,11,[[],[R[2]]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[236],E,E,11,[[["self"]],[T]]],[11,R[241],E,E,11,[[["self"]],["typeid"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[238],E,E,12,[[[U]],[R[2]]]],[11,R[239],E,E,12,[[],[R[2]]]],[11,"borrow",E,E,12,[[["self"]],[T]]],[11,R[236],E,E,12,[[["self"]],[T]]],[11,R[241],E,E,12,[[["self"]],["typeid"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[238],E,E,13,[[[U]],[R[2]]]],[11,R[239],E,E,13,[[],[R[2]]]],[11,"borrow",E,E,13,[[["self"]],[T]]],[11,R[236],E,E,13,[[["self"]],[T]]],[11,R[241],E,E,13,[[["self"]],["typeid"]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[238],E,E,82,[[[U]],[R[2]]]],[11,R[239],E,E,82,[[],[R[2]]]],[11,"borrow",E,E,82,[[["self"]],[T]]],[11,R[236],E,E,82,[[["self"]],[T]]],[11,R[241],E,E,82,[[["self"]],["typeid"]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[238],E,E,83,[[[U]],[R[2]]]],[11,R[239],E,E,83,[[],[R[2]]]],[11,"borrow",E,E,83,[[["self"]],[T]]],[11,R[236],E,E,83,[[["self"]],[T]]],[11,R[241],E,E,83,[[["self"]],["typeid"]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[238],E,E,84,[[[U]],[R[2]]]],[11,R[239],E,E,84,[[],[R[2]]]],[11,"borrow",E,E,84,[[["self"]],[T]]],[11,R[236],E,E,84,[[["self"]],[T]]],[11,R[241],E,E,84,[[["self"]],["typeid"]]],[11,"into",R[242],E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[238],E,E,24,[[[U]],[R[2]]]],[11,R[239],E,E,24,[[],[R[2]]]],[11,"borrow",E,E,24,[[["self"]],[T]]],[11,R[236],E,E,24,[[["self"]],[T]]],[11,R[241],E,E,24,[[["self"]],["typeid"]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[238],E,E,85,[[[U]],[R[2]]]],[11,R[239],E,E,85,[[],[R[2]]]],[11,"borrow",E,E,85,[[["self"]],[T]]],[11,R[236],E,E,85,[[["self"]],[T]]],[11,R[241],E,E,85,[[["self"]],["typeid"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[238],E,E,25,[[[U]],[R[2]]]],[11,R[239],E,E,25,[[],[R[2]]]],[11,"borrow",E,E,25,[[["self"]],[T]]],[11,R[236],E,E,25,[[["self"]],[T]]],[11,R[241],E,E,25,[[["self"]],["typeid"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[238],E,E,26,[[[U]],[R[2]]]],[11,R[239],E,E,26,[[],[R[2]]]],[11,"borrow",E,E,26,[[["self"]],[T]]],[11,R[236],E,E,26,[[["self"]],[T]]],[11,R[241],E,E,26,[[["self"]],["typeid"]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[240],E,E,27,[[["self"]],[T]]],[11,R[237],E,E,27,[[["self"],[T]]]],[11,R[238],E,E,27,[[[U]],[R[2]]]],[11,R[239],E,E,27,[[],[R[2]]]],[11,"borrow",E,E,27,[[["self"]],[T]]],[11,R[236],E,E,27,[[["self"]],[T]]],[11,R[241],E,E,27,[[["self"]],["typeid"]]],[11,"into",R[172],E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[238],E,E,86,[[[U]],[R[2]]]],[11,R[239],E,E,86,[[],[R[2]]]],[11,"borrow",E,E,86,[[["self"]],[T]]],[11,R[236],E,E,86,[[["self"]],[T]]],[11,R[241],E,E,86,[[["self"]],["typeid"]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[240],E,E,87,[[["self"]],[T]]],[11,R[237],E,E,87,[[["self"],[T]]]],[11,R[238],E,E,87,[[[U]],[R[2]]]],[11,R[239],E,E,87,[[],[R[2]]]],[11,"borrow",E,E,87,[[["self"]],[T]]],[11,R[236],E,E,87,[[["self"]],[T]]],[11,R[241],E,E,87,[[["self"]],["typeid"]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[240],E,E,88,[[["self"]],[T]]],[11,R[237],E,E,88,[[["self"],[T]]]],[11,R[238],E,E,88,[[[U]],[R[2]]]],[11,R[239],E,E,88,[[],[R[2]]]],[11,"borrow",E,E,88,[[["self"]],[T]]],[11,R[236],E,E,88,[[["self"]],[T]]],[11,R[241],E,E,88,[[["self"]],["typeid"]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[240],E,E,89,[[["self"]],[T]]],[11,R[237],E,E,89,[[["self"],[T]]]],[11,R[238],E,E,89,[[[U]],[R[2]]]],[11,R[239],E,E,89,[[],[R[2]]]],[11,"borrow",E,E,89,[[["self"]],[T]]],[11,R[236],E,E,89,[[["self"]],[T]]],[11,R[241],E,E,89,[[["self"]],["typeid"]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[240],E,E,90,[[["self"]],[T]]],[11,R[237],E,E,90,[[["self"],[T]]]],[11,R[238],E,E,90,[[[U]],[R[2]]]],[11,R[239],E,E,90,[[],[R[2]]]],[11,"borrow",E,E,90,[[["self"]],[T]]],[11,R[236],E,E,90,[[["self"]],[T]]],[11,R[241],E,E,90,[[["self"]],["typeid"]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[240],E,E,91,[[["self"]],[T]]],[11,R[237],E,E,91,[[["self"],[T]]]],[11,R[238],E,E,91,[[[U]],[R[2]]]],[11,R[239],E,E,91,[[],[R[2]]]],[11,"borrow",E,E,91,[[["self"]],[T]]],[11,R[236],E,E,91,[[["self"]],[T]]],[11,R[241],E,E,91,[[["self"]],["typeid"]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[238],E,E,92,[[[U]],[R[2]]]],[11,R[239],E,E,92,[[],[R[2]]]],[11,"borrow",E,E,92,[[["self"]],[T]]],[11,R[236],E,E,92,[[["self"]],[T]]],[11,R[241],E,E,92,[[["self"]],["typeid"]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[238],E,E,93,[[[U]],[R[2]]]],[11,R[239],E,E,93,[[],[R[2]]]],[11,"borrow",E,E,93,[[["self"]],[T]]],[11,R[236],E,E,93,[[["self"]],[T]]],[11,R[241],E,E,93,[[["self"]],["typeid"]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[238],E,E,94,[[[U]],[R[2]]]],[11,R[239],E,E,94,[[],[R[2]]]],[11,"borrow",E,E,94,[[["self"]],[T]]],[11,R[236],E,E,94,[[["self"]],[T]]],[11,R[241],E,E,94,[[["self"]],["typeid"]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[238],E,E,95,[[[U]],[R[2]]]],[11,R[239],E,E,95,[[],[R[2]]]],[11,"borrow",E,E,95,[[["self"]],[T]]],[11,R[236],E,E,95,[[["self"]],[T]]],[11,R[241],E,E,95,[[["self"]],["typeid"]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[240],E,E,96,[[["self"]],[T]]],[11,R[237],E,E,96,[[["self"],[T]]]],[11,R[238],E,E,96,[[[U]],[R[2]]]],[11,R[239],E,E,96,[[],[R[2]]]],[11,"borrow",E,E,96,[[["self"]],[T]]],[11,R[236],E,E,96,[[["self"]],[T]]],[11,R[241],E,E,96,[[["self"]],["typeid"]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[238],E,E,97,[[[U]],[R[2]]]],[11,R[239],E,E,97,[[],[R[2]]]],[11,"borrow",E,E,97,[[["self"]],[T]]],[11,R[236],E,E,97,[[["self"]],[T]]],[11,R[241],E,E,97,[[["self"]],["typeid"]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[238],E,E,98,[[[U]],[R[2]]]],[11,R[239],E,E,98,[[],[R[2]]]],[11,"borrow",E,E,98,[[["self"]],[T]]],[11,R[236],E,E,98,[[["self"]],[T]]],[11,R[241],E,E,98,[[["self"]],["typeid"]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[238],E,E,99,[[[U]],[R[2]]]],[11,R[239],E,E,99,[[],[R[2]]]],[11,"borrow",E,E,99,[[["self"]],[T]]],[11,R[236],E,E,99,[[["self"]],[T]]],[11,R[241],E,E,99,[[["self"]],["typeid"]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[238],E,E,100,[[[U]],[R[2]]]],[11,R[239],E,E,100,[[],[R[2]]]],[11,"borrow",E,E,100,[[["self"]],[T]]],[11,R[236],E,E,100,[[["self"]],[T]]],[11,R[241],E,E,100,[[["self"]],["typeid"]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[238],E,E,101,[[[U]],[R[2]]]],[11,R[239],E,E,101,[[],[R[2]]]],[11,"borrow",E,E,101,[[["self"]],[T]]],[11,R[236],E,E,101,[[["self"]],[T]]],[11,R[241],E,E,101,[[["self"]],["typeid"]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[238],E,E,102,[[[U]],[R[2]]]],[11,R[239],E,E,102,[[],[R[2]]]],[11,"borrow",E,E,102,[[["self"]],[T]]],[11,R[236],E,E,102,[[["self"]],[T]]],[11,R[241],E,E,102,[[["self"]],["typeid"]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[240],E,E,103,[[["self"]],[T]]],[11,R[237],E,E,103,[[["self"],[T]]]],[11,R[238],E,E,103,[[[U]],[R[2]]]],[11,R[239],E,E,103,[[],[R[2]]]],[11,"borrow",E,E,103,[[["self"]],[T]]],[11,R[236],E,E,103,[[["self"]],[T]]],[11,R[241],E,E,103,[[["self"]],["typeid"]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[238],E,E,104,[[[U]],[R[2]]]],[11,R[239],E,E,104,[[],[R[2]]]],[11,"borrow",E,E,104,[[["self"]],[T]]],[11,R[236],E,E,104,[[["self"]],[T]]],[11,R[241],E,E,104,[[["self"]],["typeid"]]],[11,"into",E,E,105,[[],[U]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[238],E,E,105,[[[U]],[R[2]]]],[11,R[239],E,E,105,[[],[R[2]]]],[11,"borrow",E,E,105,[[["self"]],[T]]],[11,R[236],E,E,105,[[["self"]],[T]]],[11,R[241],E,E,105,[[["self"]],["typeid"]]],[11,"into",E,E,106,[[],[U]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[238],E,E,106,[[[U]],[R[2]]]],[11,R[239],E,E,106,[[],[R[2]]]],[11,"borrow",E,E,106,[[["self"]],[T]]],[11,R[236],E,E,106,[[["self"]],[T]]],[11,R[241],E,E,106,[[["self"]],["typeid"]]],[11,"into",E,E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[238],E,E,107,[[[U]],[R[2]]]],[11,R[239],E,E,107,[[],[R[2]]]],[11,"borrow",E,E,107,[[["self"]],[T]]],[11,R[236],E,E,107,[[["self"]],[T]]],[11,R[241],E,E,107,[[["self"]],["typeid"]]],[11,"into",E,E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[238],E,E,108,[[[U]],[R[2]]]],[11,R[239],E,E,108,[[],[R[2]]]],[11,"borrow",E,E,108,[[["self"]],[T]]],[11,R[236],E,E,108,[[["self"]],[T]]],[11,R[241],E,E,108,[[["self"]],["typeid"]]],[11,"into",E,E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[240],E,E,109,[[["self"]],[T]]],[11,R[237],E,E,109,[[["self"],[T]]]],[11,R[235],E,E,109,[[["self"]],[R[60]]]],[11,R[238],E,E,109,[[[U]],[R[2]]]],[11,R[239],E,E,109,[[],[R[2]]]],[11,"borrow",E,E,109,[[["self"]],[T]]],[11,R[236],E,E,109,[[["self"]],[T]]],[11,R[241],E,E,109,[[["self"]],["typeid"]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[238],E,E,110,[[[U]],[R[2]]]],[11,R[239],E,E,110,[[],[R[2]]]],[11,"borrow",E,E,110,[[["self"]],[T]]],[11,R[236],E,E,110,[[["self"]],[T]]],[11,R[241],E,E,110,[[["self"]],["typeid"]]],[11,"into",E,E,111,[[],[U]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[238],E,E,111,[[[U]],[R[2]]]],[11,R[239],E,E,111,[[],[R[2]]]],[11,"borrow",E,E,111,[[["self"]],[T]]],[11,R[236],E,E,111,[[["self"]],[T]]],[11,R[241],E,E,111,[[["self"]],["typeid"]]],[11,"into",E,E,112,[[],[U]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[238],E,E,112,[[[U]],[R[2]]]],[11,R[239],E,E,112,[[],[R[2]]]],[11,"borrow",E,E,112,[[["self"]],[T]]],[11,R[236],E,E,112,[[["self"]],[T]]],[11,R[241],E,E,112,[[["self"]],["typeid"]]],[11,"into",R[243],E,113,[[],[U]]],[11,"from",E,E,113,[[[T]],[T]]],[11,"from",E,E,113,[[],[T]]],[11,R[240],E,E,113,[[["self"]],[T]]],[11,R[237],E,E,113,[[["self"],[T]]]],[11,R[235],E,E,113,[[["self"]],[R[60]]]],[11,R[238],E,E,113,[[[U]],[R[2]]]],[11,R[239],E,E,113,[[],[R[2]]]],[11,"borrow",E,E,113,[[["self"]],[T]]],[11,R[236],E,E,113,[[["self"]],[T]]],[11,R[241],E,E,113,[[["self"]],["typeid"]]],[11,"into",E,E,114,[[],[U]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[240],E,E,114,[[["self"]],[T]]],[11,R[237],E,E,114,[[["self"],[T]]]],[11,R[238],E,E,114,[[[U]],[R[2]]]],[11,R[239],E,E,114,[[],[R[2]]]],[11,"borrow",E,E,114,[[["self"]],[T]]],[11,R[236],E,E,114,[[["self"]],[T]]],[11,R[241],E,E,114,[[["self"]],["typeid"]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"from",E,E,41,[[],[T]]],[11,R[238],E,E,41,[[[U]],[R[2]]]],[11,R[239],E,E,41,[[],[R[2]]]],[11,"borrow",E,E,41,[[["self"]],[T]]],[11,R[236],E,E,41,[[["self"]],[T]]],[11,R[241],E,E,41,[[["self"]],["typeid"]]],[11,"into",E,E,115,[[],[U]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[235],E,E,115,[[["self"]],[R[60]]]],[11,R[238],E,E,115,[[[U]],[R[2]]]],[11,R[239],E,E,115,[[],[R[2]]]],[11,"borrow",E,E,115,[[["self"]],[T]]],[11,R[236],E,E,115,[[["self"]],[T]]],[11,R[241],E,E,115,[[["self"]],["typeid"]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"from",E,E,42,[[],[T]]],[11,R[238],E,E,42,[[[U]],[R[2]]]],[11,R[239],E,E,42,[[],[R[2]]]],[11,"borrow",E,E,42,[[["self"]],[T]]],[11,R[236],E,E,42,[[["self"]],[T]]],[11,R[241],E,E,42,[[["self"]],["typeid"]]],[11,"into",E,E,116,[[],[U]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[235],E,E,116,[[["self"]],[R[60]]]],[11,R[238],E,E,116,[[[U]],[R[2]]]],[11,R[239],E,E,116,[[],[R[2]]]],[11,"borrow",E,E,116,[[["self"]],[T]]],[11,R[236],E,E,116,[[["self"]],[T]]],[11,R[241],E,E,116,[[["self"]],["typeid"]]],[11,"into",E,E,117,[[],[U]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[235],E,E,117,[[["self"]],[R[60]]]],[11,R[238],E,E,117,[[[U]],[R[2]]]],[11,R[239],E,E,117,[[],[R[2]]]],[11,"borrow",E,E,117,[[["self"]],[T]]],[11,R[236],E,E,117,[[["self"]],[T]]],[11,R[241],E,E,117,[[["self"]],["typeid"]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[238],E,E,43,[[[U]],[R[2]]]],[11,R[239],E,E,43,[[],[R[2]]]],[11,"borrow",E,E,43,[[["self"]],[T]]],[11,R[236],E,E,43,[[["self"]],[T]]],[11,R[241],E,E,43,[[["self"]],["typeid"]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[240],E,E,44,[[["self"]],[T]]],[11,R[237],E,E,44,[[["self"],[T]]]],[11,R[238],E,E,44,[[[U]],[R[2]]]],[11,R[239],E,E,44,[[],[R[2]]]],[11,"borrow",E,E,44,[[["self"]],[T]]],[11,R[236],E,E,44,[[["self"]],[T]]],[11,R[241],E,E,44,[[["self"]],["typeid"]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[240],E,E,45,[[["self"]],[T]]],[11,R[237],E,E,45,[[["self"],[T]]]],[11,R[238],E,E,45,[[[U]],[R[2]]]],[11,R[239],E,E,45,[[],[R[2]]]],[11,"borrow",E,E,45,[[["self"]],[T]]],[11,R[236],E,E,45,[[["self"]],[T]]],[11,R[241],E,E,45,[[["self"]],["typeid"]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[240],E,E,46,[[["self"]],[T]]],[11,R[237],E,E,46,[[["self"],[T]]]],[11,R[238],E,E,46,[[[U]],[R[2]]]],[11,R[239],E,E,46,[[],[R[2]]]],[11,"borrow",E,E,46,[[["self"]],[T]]],[11,R[236],E,E,46,[[["self"]],[T]]],[11,R[241],E,E,46,[[["self"]],["typeid"]]],[11,"into",R[244],E,118,[[],[U]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[238],E,E,118,[[[U]],[R[2]]]],[11,R[239],E,E,118,[[],[R[2]]]],[11,"borrow",E,E,118,[[["self"]],[T]]],[11,R[236],E,E,118,[[["self"]],[T]]],[11,R[241],E,E,118,[[["self"]],["typeid"]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"from",E,E,47,[[],[T]]],[11,R[240],E,E,47,[[["self"]],[T]]],[11,R[237],E,E,47,[[["self"],[T]]]],[11,R[238],E,E,47,[[[U]],[R[2]]]],[11,R[239],E,E,47,[[],[R[2]]]],[11,"borrow",E,E,47,[[["self"]],[T]]],[11,R[236],E,E,47,[[["self"]],[T]]],[11,R[241],E,E,47,[[["self"]],["typeid"]]],[11,"into",E,E,119,[[],[U]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[240],E,E,119,[[["self"]],[T]]],[11,R[237],E,E,119,[[["self"],[T]]]],[11,R[238],E,E,119,[[[U]],[R[2]]]],[11,R[239],E,E,119,[[],[R[2]]]],[11,"borrow",E,E,119,[[["self"]],[T]]],[11,R[236],E,E,119,[[["self"]],[T]]],[11,R[241],E,E,119,[[["self"]],["typeid"]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[238],E,E,48,[[[U]],[R[2]]]],[11,R[239],E,E,48,[[],[R[2]]]],[11,"borrow",E,E,48,[[["self"]],[T]]],[11,R[236],E,E,48,[[["self"]],[T]]],[11,R[241],E,E,48,[[["self"]],["typeid"]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[240],E,E,50,[[["self"]],[T]]],[11,R[237],E,E,50,[[["self"],[T]]]],[11,R[238],E,E,50,[[[U]],[R[2]]]],[11,R[239],E,E,50,[[],[R[2]]]],[11,"borrow",E,E,50,[[["self"]],[T]]],[11,R[236],E,E,50,[[["self"]],[T]]],[11,R[241],E,E,50,[[["self"]],["typeid"]]],[11,"into",E,E,120,[[],[U]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[240],E,E,120,[[["self"]],[T]]],[11,R[237],E,E,120,[[["self"],[T]]]],[11,R[235],E,E,120,[[["self"]],[R[60]]]],[11,R[238],E,E,120,[[[U]],[R[2]]]],[11,R[239],E,E,120,[[],[R[2]]]],[11,"borrow",E,E,120,[[["self"]],[T]]],[11,R[236],E,E,120,[[["self"]],[T]]],[11,R[241],E,E,120,[[["self"]],["typeid"]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[238],E,E,49,[[[U]],[R[2]]]],[11,R[239],E,E,49,[[],[R[2]]]],[11,"borrow",E,E,49,[[["self"]],[T]]],[11,R[236],E,E,49,[[["self"]],[T]]],[11,R[241],E,E,49,[[["self"]],["typeid"]]],[11,R[250],E,E,49,[[[R[62]],["f"],["pin"]],["poll"]]],[11,R[250],E,E,49,[[[R[62]],["f"],["pin"]],["poll"]]],[11,"into",E,E,121,[[],[U]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[240],E,E,121,[[["self"]],[T]]],[11,R[237],E,E,121,[[["self"],[T]]]],[11,R[235],E,E,121,[[["self"]],[R[60]]]],[11,R[238],E,E,121,[[[U]],[R[2]]]],[11,R[239],E,E,121,[[],[R[2]]]],[11,"borrow",E,E,121,[[["self"]],[T]]],[11,R[236],E,E,121,[[["self"]],[T]]],[11,R[241],E,E,121,[[["self"]],["typeid"]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[238],E,E,51,[[[U]],[R[2]]]],[11,R[239],E,E,51,[[],[R[2]]]],[11,"borrow",E,E,51,[[["self"]],[T]]],[11,R[236],E,E,51,[[["self"]],[T]]],[11,R[241],E,E,51,[[["self"]],["typeid"]]],[11,"into",R[245],E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[238],E,E,52,[[[U]],[R[2]]]],[11,R[239],E,E,52,[[],[R[2]]]],[11,"borrow",E,E,52,[[["self"]],[T]]],[11,R[236],E,E,52,[[["self"]],[T]]],[11,R[241],E,E,52,[[["self"]],["typeid"]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[238],E,E,53,[[[U]],[R[2]]]],[11,R[239],E,E,53,[[],[R[2]]]],[11,"borrow",E,E,53,[[["self"]],[T]]],[11,R[236],E,E,53,[[["self"]],[T]]],[11,R[241],E,E,53,[[["self"]],["typeid"]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[238],E,E,54,[[[U]],[R[2]]]],[11,R[239],E,E,54,[[],[R[2]]]],[11,"borrow",E,E,54,[[["self"]],[T]]],[11,R[236],E,E,54,[[["self"]],[T]]],[11,R[241],E,E,54,[[["self"]],["typeid"]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[240],E,E,55,[[["self"]],[T]]],[11,R[237],E,E,55,[[["self"],[T]]]],[11,R[238],E,E,55,[[[U]],[R[2]]]],[11,R[239],E,E,55,[[],[R[2]]]],[11,"borrow",E,E,55,[[["self"]],[T]]],[11,R[236],E,E,55,[[["self"]],[T]]],[11,R[241],E,E,55,[[["self"]],["typeid"]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[240],E,E,56,[[["self"]],[T]]],[11,R[237],E,E,56,[[["self"],[T]]]],[11,R[238],E,E,56,[[[U]],[R[2]]]],[11,R[239],E,E,56,[[],[R[2]]]],[11,"borrow",E,E,56,[[["self"]],[T]]],[11,R[236],E,E,56,[[["self"]],[T]]],[11,R[241],E,E,56,[[["self"]],["typeid"]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[240],E,E,57,[[["self"]],[T]]],[11,R[237],E,E,57,[[["self"],[T]]]],[11,R[238],E,E,57,[[[U]],[R[2]]]],[11,R[239],E,E,57,[[],[R[2]]]],[11,"borrow",E,E,57,[[["self"]],[T]]],[11,R[236],E,E,57,[[["self"]],[T]]],[11,R[241],E,E,57,[[["self"]],["typeid"]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[240],E,E,58,[[["self"]],[T]]],[11,R[237],E,E,58,[[["self"],[T]]]],[11,R[238],E,E,58,[[[U]],[R[2]]]],[11,R[239],E,E,58,[[],[R[2]]]],[11,"borrow",E,E,58,[[["self"]],[T]]],[11,R[236],E,E,58,[[["self"]],[T]]],[11,R[241],E,E,58,[[["self"]],["typeid"]]],[11,"into",E,E,122,[[],[U]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[238],E,E,122,[[[U]],[R[2]]]],[11,R[239],E,E,122,[[],[R[2]]]],[11,"borrow",E,E,122,[[["self"]],[T]]],[11,R[236],E,E,122,[[["self"]],[T]]],[11,R[241],E,E,122,[[["self"]],["typeid"]]],[11,"into",R[246],E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[240],E,E,59,[[["self"]],[T]]],[11,R[237],E,E,59,[[["self"],[T]]]],[11,R[238],E,E,59,[[[U]],[R[2]]]],[11,R[239],E,E,59,[[],[R[2]]]],[11,"borrow",E,E,59,[[["self"]],[T]]],[11,R[236],E,E,59,[[["self"]],[T]]],[11,R[241],E,E,59,[[["self"]],["typeid"]]],[11,"into",E,E,123,[[],[U]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[235],E,E,123,[[["self"]],[R[60]]]],[11,R[238],E,E,123,[[[U]],[R[2]]]],[11,R[239],E,E,123,[[],[R[2]]]],[11,"borrow",E,E,123,[[["self"]],[T]]],[11,R[236],E,E,123,[[["self"]],[T]]],[11,R[241],E,E,123,[[["self"]],["typeid"]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[240],E,E,60,[[["self"]],[T]]],[11,R[237],E,E,60,[[["self"],[T]]]],[11,R[238],E,E,60,[[[U]],[R[2]]]],[11,R[239],E,E,60,[[],[R[2]]]],[11,"borrow",E,E,60,[[["self"]],[T]]],[11,R[236],E,E,60,[[["self"]],[T]]],[11,R[241],E,E,60,[[["self"]],["typeid"]]],[11,"into",E,E,124,[[],[U]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[240],E,E,124,[[["self"]],[T]]],[11,R[237],E,E,124,[[["self"],[T]]]],[11,R[238],E,E,124,[[[U]],[R[2]]]],[11,R[239],E,E,124,[[],[R[2]]]],[11,"borrow",E,E,124,[[["self"]],[T]]],[11,R[236],E,E,124,[[["self"]],[T]]],[11,R[241],E,E,124,[[["self"]],["typeid"]]],[11,"into",E,E,125,[[],[U]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[240],E,E,125,[[["self"]],[T]]],[11,R[237],E,E,125,[[["self"],[T]]]],[11,R[235],E,E,125,[[["self"]],[R[60]]]],[11,R[238],E,E,125,[[[U]],[R[2]]]],[11,R[239],E,E,125,[[],[R[2]]]],[11,"borrow",E,E,125,[[["self"]],[T]]],[11,R[236],E,E,125,[[["self"]],[T]]],[11,R[241],E,E,125,[[["self"]],["typeid"]]],[11,"into",E,E,126,[[],[U]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[247],E,E,126,[[],["i"]]],[11,R[240],E,E,126,[[["self"]],[T]]],[11,R[237],E,E,126,[[["self"],[T]]]],[11,R[238],E,E,126,[[[U]],[R[2]]]],[11,R[239],E,E,126,[[],[R[2]]]],[11,"borrow",E,E,126,[[["self"]],[T]]],[11,R[236],E,E,126,[[["self"]],[T]]],[11,R[241],E,E,126,[[["self"]],["typeid"]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[247],E,E,61,[[],["i"]]],[11,R[240],E,E,61,[[["self"]],[T]]],[11,R[237],E,E,61,[[["self"],[T]]]],[11,R[238],E,E,61,[[[U]],[R[2]]]],[11,R[239],E,E,61,[[],[R[2]]]],[11,"borrow",E,E,61,[[["self"]],[T]]],[11,R[236],E,E,61,[[["self"]],[T]]],[11,R[241],E,E,61,[[["self"]],["typeid"]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[247],E,E,62,[[],["i"]]],[11,R[240],E,E,62,[[["self"]],[T]]],[11,R[237],E,E,62,[[["self"],[T]]]],[11,R[238],E,E,62,[[[U]],[R[2]]]],[11,R[239],E,E,62,[[],[R[2]]]],[11,"borrow",E,E,62,[[["self"]],[T]]],[11,R[236],E,E,62,[[["self"]],[T]]],[11,R[241],E,E,62,[[["self"]],["typeid"]]],[11,R[240],E,E,63,[[["self"]],[T]]],[11,R[237],E,E,63,[[["self"],[T]]]],[11,"borrow",E,E,63,[[["self"]],[T]]],[11,R[236],E,E,63,[[["self"]],[T]]],[11,R[241],E,E,63,[[["self"]],["typeid"]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[240],E,E,64,[[["self"]],[T]]],[11,R[237],E,E,64,[[["self"],[T]]]],[11,R[238],E,E,64,[[[U]],[R[2]]]],[11,R[239],E,E,64,[[],[R[2]]]],[11,"borrow",E,E,64,[[["self"]],[T]]],[11,R[236],E,E,64,[[["self"]],[T]]],[11,R[241],E,E,64,[[["self"]],["typeid"]]],[11,"into",R[248],E,127,[[],[U]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[240],E,E,127,[[["self"]],[T]]],[11,R[237],E,E,127,[[["self"],[T]]]],[11,R[235],E,E,127,[[["self"]],[R[60]]]],[11,R[238],E,E,127,[[[U]],[R[2]]]],[11,R[239],E,E,127,[[],[R[2]]]],[11,"borrow",E,E,127,[[["self"]],[T]]],[11,R[236],E,E,127,[[["self"]],[T]]],[11,R[241],E,E,127,[[["self"]],["typeid"]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[240],E,E,65,[[["self"]],[T]]],[11,R[237],E,E,65,[[["self"],[T]]]],[11,R[238],E,E,65,[[[U]],[R[2]]]],[11,R[239],E,E,65,[[],[R[2]]]],[11,"borrow",E,E,65,[[["self"]],[T]]],[11,R[236],E,E,65,[[["self"]],[T]]],[11,R[241],E,E,65,[[["self"]],["typeid"]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[240],E,E,66,[[["self"]],[T]]],[11,R[237],E,E,66,[[["self"],[T]]]],[11,R[235],E,E,66,[[["self"]],[R[60]]]],[11,R[238],E,E,66,[[[U]],[R[2]]]],[11,R[239],E,E,66,[[],[R[2]]]],[11,"borrow",E,E,66,[[["self"]],[T]]],[11,R[236],E,E,66,[[["self"]],[T]]],[11,R[241],E,E,66,[[["self"]],["typeid"]]],[11,"into",E,E,128,[[],[U]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[240],E,E,128,[[["self"]],[T]]],[11,R[237],E,E,128,[[["self"],[T]]]],[11,R[235],E,E,128,[[["self"]],[R[60]]]],[11,R[238],E,E,128,[[[U]],[R[2]]]],[11,R[239],E,E,128,[[],[R[2]]]],[11,"borrow",E,E,128,[[["self"]],[T]]],[11,R[236],E,E,128,[[["self"]],[T]]],[11,R[241],E,E,128,[[["self"]],["typeid"]]],[11,"into",E,E,129,[[],[U]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[240],E,E,129,[[["self"]],[T]]],[11,R[237],E,E,129,[[["self"],[T]]]],[11,R[235],E,E,129,[[["self"]],[R[60]]]],[11,R[238],E,E,129,[[[U]],[R[2]]]],[11,R[239],E,E,129,[[],[R[2]]]],[11,"borrow",E,E,129,[[["self"]],[T]]],[11,R[236],E,E,129,[[["self"]],[T]]],[11,R[241],E,E,129,[[["self"]],["typeid"]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[240],E,E,67,[[["self"]],[T]]],[11,R[237],E,E,67,[[["self"],[T]]]],[11,R[235],E,E,67,[[["self"]],[R[60]]]],[11,R[238],E,E,67,[[[U]],[R[2]]]],[11,R[239],E,E,67,[[],[R[2]]]],[11,"borrow",E,E,67,[[["self"]],[T]]],[11,R[236],E,E,67,[[["self"]],[T]]],[11,R[241],E,E,67,[[["self"]],["typeid"]]],[11,"into",E,E,130,[[],[U]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[240],E,E,130,[[["self"]],[T]]],[11,R[237],E,E,130,[[["self"],[T]]]],[11,R[235],E,E,130,[[["self"]],[R[60]]]],[11,R[238],E,E,130,[[[U]],[R[2]]]],[11,R[239],E,E,130,[[],[R[2]]]],[11,"borrow",E,E,130,[[["self"]],[T]]],[11,R[236],E,E,130,[[["self"]],[T]]],[11,R[241],E,E,130,[[["self"]],["typeid"]]],[11,"into",E,E,131,[[],[U]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[240],E,E,131,[[["self"]],[T]]],[11,R[237],E,E,131,[[["self"],[T]]]],[11,R[235],E,E,131,[[["self"]],[R[60]]]],[11,R[238],E,E,131,[[[U]],[R[2]]]],[11,R[239],E,E,131,[[],[R[2]]]],[11,"borrow",E,E,131,[[["self"]],[T]]],[11,R[236],E,E,131,[[["self"]],[T]]],[11,R[241],E,E,131,[[["self"]],["typeid"]]],[11,"into",E,E,132,[[],[U]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[238],E,E,132,[[[U]],[R[2]]]],[11,R[239],E,E,132,[[],[R[2]]]],[11,"borrow",E,E,132,[[["self"]],[T]]],[11,R[236],E,E,132,[[["self"]],[T]]],[11,R[241],E,E,132,[[["self"]],["typeid"]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[238],E,E,68,[[[U]],[R[2]]]],[11,R[239],E,E,68,[[],[R[2]]]],[11,"borrow",E,E,68,[[["self"]],[T]]],[11,R[236],E,E,68,[[["self"]],[T]]],[11,R[241],E,E,68,[[["self"]],["typeid"]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[238],E,E,69,[[[U]],[R[2]]]],[11,R[239],E,E,69,[[],[R[2]]]],[11,"borrow",E,E,69,[[["self"]],[T]]],[11,R[236],E,E,69,[[["self"]],[T]]],[11,R[241],E,E,69,[[["self"]],["typeid"]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[238],E,E,70,[[[U]],[R[2]]]],[11,R[239],E,E,70,[[],[R[2]]]],[11,"borrow",E,E,70,[[["self"]],[T]]],[11,R[236],E,E,70,[[["self"]],[T]]],[11,R[241],E,E,70,[[["self"]],["typeid"]]],[11,"into",R[249],E,133,[[],[U]]],[11,"from",E,E,133,[[[T]],[T]]],[11,R[240],E,E,133,[[["self"]],[T]]],[11,R[237],E,E,133,[[["self"],[T]]]],[11,R[235],E,E,133,[[["self"]],[R[60]]]],[11,R[238],E,E,133,[[[U]],[R[2]]]],[11,R[239],E,E,133,[[],[R[2]]]],[11,"borrow",E,E,133,[[["self"]],[T]]],[11,R[236],E,E,133,[[["self"]],[T]]],[11,R[241],E,E,133,[[["self"]],["typeid"]]],[11,R[250],E,E,133,[[[R[62]],["f"],["pin"]],["poll"]]],[11,R[251],E,E,133,[[[R[62]],["pin"],["s"]],[["option",[R[2]]],["poll",["option"]]]]],[11,R[250],E,E,133,[[[R[62]],["f"],["pin"]],["poll"]]],[11,R[251],E,E,133,[[[R[62]],["pin"],["s"]],[["poll",["option"]],["option",[R[2]]]]]],[11,"into",R[252],E,134,[[],[U]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[240],E,E,134,[[["self"]],[T]]],[11,R[237],E,E,134,[[["self"],[T]]]],[11,R[235],E,E,134,[[["self"]],[R[60]]]],[11,R[238],E,E,134,[[[U]],[R[2]]]],[11,R[239],E,E,134,[[],[R[2]]]],[11,"borrow",E,E,134,[[["self"]],[T]]],[11,R[236],E,E,134,[[["self"]],[T]]],[11,R[241],E,E,134,[[["self"]],["typeid"]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[240],E,E,72,[[["self"]],[T]]],[11,R[237],E,E,72,[[["self"],[T]]]],[11,R[238],E,E,72,[[[U]],[R[2]]]],[11,R[239],E,E,72,[[],[R[2]]]],[11,"borrow",E,E,72,[[["self"]],[T]]],[11,R[236],E,E,72,[[["self"]],[T]]],[11,R[241],E,E,72,[[["self"]],["typeid"]]],[11,R[253],R[246],E,125,[[["self"]],["str"]]],[11,R[253],R[248],E,127,[[["self"]],["str"]]],[11,R[253],R[53],E,74,[[["self"]],["str"]]],[11,"cause",E,E,74,[[["self"]],[["option",["error"]],["error"]]]],[11,"source",E,E,74,[[["self"]],[["error"],["option",["error"]]]]],[11,"deref",E,E,76,[[["self"]]]],[11,"deref",E,E,75,[[["self"]]]],[11,R[257],R[248],E,129,[[["str"]],[[R[2],[R[254],R[255]]],[R[255]],[R[254]]]]],[11,R[257],E,E,128,[[["str"]],[[R[256]],[R[255]],[R[2],[R[256],R[255]]]]]],[11,R[257],E,E,66,[[["str"]],[["ipaddr"],[R[255]],[R[2],["ipaddr",R[255]]]]]],[11,R[257],E,E,67,[[["str"]],[[R[65]],[R[255]],[R[2],[R[65],R[255]]]]]],[11,R[257],E,E,130,[[["str"]],[[R[2],[R[258],R[255]]],[R[258]],[R[255]]]]],[11,R[257],E,E,131,[[["str"]],[[R[2],[R[259],R[255]]],[R[255]],[R[259]]]]],[11,R[260],E,E,67,[[["self"]],[[R[261],[R[65]]],[R[2],[R[261],"error"]],["error"]]]],[11,R[260],E,E,131,[[["self"]],[[R[261],[R[65]]],[R[2],[R[261],"error"]],["error"]]]],[11,R[260],E,E,130,[[["self"]],[[R[261],[R[65]]],[R[2],[R[261],"error"]],["error"]]]],[11,"fmt",E,E,127,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,128,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,66,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[53],E,74,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[248],E,129,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[246],E,125,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[252],E,134,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[246],E,123,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[248],E,130,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,67,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,131,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"eq",R[53],E,3,[[[R[37]],["self"]],["bool"]]],[11,"ne",E,E,3,[[[R[37]],["self"]],["bool"]]],[11,"eq",R[248],E,66,[[[R[256]],["self"]],["bool"]]],[11,"eq",R[246],E,59,[[[R[263]],["self"]],["bool"]]],[11,"ne",E,E,59,[[[R[263]],["self"]],["bool"]]],[11,"eq",E,E,124,[[["self"],[R[266]]],["bool"]]],[11,"eq",R[248],E,128,[[[R[256]],["self"]],["bool"]]],[11,"eq",R[252],E,72,[[["output"],["self"]],["bool"]]],[11,"ne",E,E,72,[[["output"],["self"]],["bool"]]],[11,"eq",R[248],E,65,[[[R[67]],["self"]],["bool"]]],[11,"eq",E,E,67,[[[R[65]],["self"]],["bool"]]],[11,"ne",E,E,67,[[[R[65]],["self"]],["bool"]]],[11,"eq",E,E,129,[[["ipaddr"],["self"]],["bool"]]],[11,"eq",E,E,127,[[[R[255]],["self"]],["bool"]]],[11,"ne",E,E,127,[[[R[255]],["self"]],["bool"]]],[11,"eq",E,E,66,[[[R[254]],["self"]],["bool"]]],[11,"eq",R[246],E,125,[[[R[211]],["self"]],["bool"]]],[11,"ne",E,E,125,[[[R[211]],["self"]],["bool"]]],[11,"eq",R[248],E,131,[[["self"],[R[259]]],["bool"]]],[11,"eq",E,E,66,[[["ipaddr"],["self"]],["bool"]]],[11,"ne",E,E,66,[[["ipaddr"],["self"]],["bool"]]],[11,"eq",R[246],E,60,[[["prefix"],["self"]],["bool"]]],[11,"ne",E,E,60,[[["prefix"],["self"]],["bool"]]],[11,"eq",R[248],E,130,[[[R[258]],["self"]],["bool"]]],[11,"eq",E,E,128,[[["ipaddr"],["self"]],["bool"]]],[11,"eq",R[252],E,134,[[[R[264]],["self"]],["bool"]]],[11,"ne",E,E,134,[[[R[264]],["self"]],["bool"]]],[11,"eq",R[53],E,2,[[[R[265]],["self"]],["bool"]]],[11,"eq",R[248],E,129,[[[R[254]],["self"]],["bool"]]],[11,"fmt",E,E,128,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[246],E,59,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[252],E,72,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[246],E,123,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[53],E,76,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[246],E,124,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[248],E,129,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,66,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[246],E,125,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[53],E,75,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,2,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[252],E,134,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[248],E,131,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[246],E,60,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[248],E,67,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,130,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[53],E,74,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,3,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[248],E,127,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,65,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"as_ref",R[246],E,59,[[["self"]],["osstr"]]],[11,"as_ref",E,E,59,[[["self"]],["path"]]],[11,"clone",R[248],E,65,[[["self"]],[R[67]]]],[11,"clone",R[252],E,134,[[["self"]],[R[264]]]],[11,"clone",R[53],E,3,[[["self"]],[R[37]]]],[11,"clone",E,E,2,[[["self"]],[R[265]]]],[11,"clone",R[248],E,131,[[["self"]],[R[259]]]],[11,"clone",E,E,129,[[["self"]],[R[254]]]],[11,"clone",R[246],E,124,[[["self"]],[R[266]]]],[11,"clone",R[248],E,127,[[["self"]],[R[255]]]],[11,"clone",E,E,130,[[["self"]],[R[258]]]],[11,"clone",E,E,67,[[["self"]],[R[65]]]],[11,"clone",R[246],E,125,[[["self"]],[R[211]]]],[11,"clone",R[248],E,128,[[["self"]],[R[256]]]],[11,"clone",E,E,66,[[["self"]],["ipaddr"]]],[11,"clone",R[246],E,60,[[["self"]],["prefix"]]],[11,"clone",E,E,59,[[["self"]],[R[263]]]],[11,"clone",R[252],E,72,[[["self"]],["output"]]],[11,"cmp",R[246],E,59,[[[R[263]],["self"]],[R[178]]]],[11,"cmp",E,E,124,[[[R[266]],["self"]],[R[178]]]],[11,"cmp",R[248],E,129,[[[R[254]],["self"]],[R[178]]]],[11,"cmp",R[246],E,60,[[["prefix"],["self"]],[R[178]]]],[11,"cmp",R[248],E,66,[[["ipaddr"],["self"]],[R[178]]]],[11,"cmp",R[53],E,2,[[[R[265]],["self"]],[R[178]]]],[11,"cmp",R[248],E,128,[[[R[256]],["self"]],[R[178]]]],[11,"hash",E,E,130,[[["self"],["h"]]]],[11,"hash",R[246],E,59,[[["self"],["__h"]]]],[11,"hash",E,E,124,[[["self"],["h"]]]],[11,"hash",R[248],E,128,[[["self"],["h"]]]],[11,"hash",E,E,66,[[["self"],["__h"]]]],[11,"hash",E,E,129,[[["self"],["h"]]]],[11,"hash",E,E,131,[[["self"],["h"]]]],[11,"hash",R[246],E,60,[[["self"],["__h"]]]],[11,"hash",R[248],E,67,[[["self"],["__h"]]]],[11,"hash",R[53],E,2,[[["self"],["__h"]]]],[11,R[163],R[248],E,129,[[[R[254]],["self"]],[[R[178]],["option",[R[178]]]]]],[11,R[163],E,E,66,[[[R[256]],["self"]],[[R[178]],["option",[R[178]]]]]],[11,R[163],E,E,128,[[["ipaddr"],["self"]],[[R[178]],["option",[R[178]]]]]],[11,R[163],E,E,66,[[[R[254]],["self"]],[[R[178]],["option",[R[178]]]]]],[11,R[163],E,E,66,[[["ipaddr"],["self"]],[[R[178]],["option",[R[178]]]]]],[11,"lt",E,E,66,[[["ipaddr"],["self"]],["bool"]]],[11,"le",E,E,66,[[["ipaddr"],["self"]],["bool"]]],[11,"gt",E,E,66,[[["ipaddr"],["self"]],["bool"]]],[11,"ge",E,E,66,[[["ipaddr"],["self"]],["bool"]]],[11,R[163],R[53],E,2,[[[R[265]],["self"]],[[R[178]],["option",[R[178]]]]]],[11,R[163],R[246],E,124,[[["self"],[R[266]]],[[R[178]],["option",[R[178]]]]]],[11,R[163],R[248],E,129,[[["ipaddr"],["self"]],[[R[178]],["option",[R[178]]]]]],[11,R[163],R[246],E,59,[[[R[263]],["self"]],[[R[178]],["option",[R[178]]]]]],[11,"lt",E,E,59,[[[R[263]],["self"]],["bool"]]],[11,"le",E,E,59,[[[R[263]],["self"]],["bool"]]],[11,"gt",E,E,59,[[[R[263]],["self"]],["bool"]]],[11,"ge",E,E,59,[[[R[263]],["self"]],["bool"]]],[11,R[163],E,E,60,[[["prefix"],["self"]],[[R[178]],["option",[R[178]]]]]],[11,"lt",E,E,60,[[["prefix"],["self"]],["bool"]]],[11,"le",E,E,60,[[["prefix"],["self"]],["bool"]]],[11,"gt",E,E,60,[[["prefix"],["self"]],["bool"]]],[11,"ge",E,E,60,[[["prefix"],["self"]],["bool"]]],[11,R[163],R[248],E,128,[[[R[256]],["self"]],[[R[178]],["option",[R[178]]]]]],[11,R[268],R[53],E,76,[[["self"]]]],[11,R[317],R[252],E,134,[[["i32"]],[R[264]]]],[11,"signal",E,E,134,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"from",R[248],"Examples",128,[[],[R[256]]]],[11,"from",R[243],"Converts a [`CString`] into a [`Arc`]`<CStr>` withoutвЂ¦",113,[[["cstring"]],[["cstr"],["arc",["cstr"]]]]],[11,"from",R[248],"Creates an `IpAddr::V6` from an eight element 16-bit array.",66,[[],["ipaddr"]]],[11,"from",E,E,66,[[[R[256]]],["ipaddr"]]],[11,"from",R[53],E,74,[[["intoinnererror"]],["error"]]],[11,"from",R[243],"Converts a `PathBuf` into an `Arc` by moving the `PathBuf`вЂ¦",113,[[[R[219]]],[["arc",["path"]],["path"]]]],[11,"from",E,"Converts a `Path` into an `Arc` by copying the `Path` dataвЂ¦",113,[[["path"]],[["arc",["path"]],["path"]]]],[11,"from",R[248],"Convert a host byte order `u128` into an `Ipv6Addr`.",129,[[["u128"]],[R[254]]]],[11,"from",E,"Converts a [`SocketAddrV4`] into a [`SocketAddr::V4`].",67,[[[R[258]]],[R[65]]]],[11,"from",E,"Converts a tuple struct (Into<[`IpAddr`]>, `u16`) into aвЂ¦",67,[[],[R[65]]]],[11,"from",E,E,129,[[],[R[254]]]],[11,"from",E,"Converts a host byte order `u32` into an `Ipv4Addr`.",128,[[["u32"]],[R[256]]]],[11,"from",E,E,129,[[],[R[254]]]],[11,"from",E,"Creates an `IpAddr::V6` from a sixteen element byte array.",66,[[],["ipaddr"]]],[11,"from",R[53],"Converts an [`ErrorKind`] into an [`Error`].",74,[[[R[265]]],["error"]]],[11,"from",R[243],"Converts a [`OsString`] into a [`Arc`]`<OsStr>` withoutвЂ¦",113,[[[R[267]]],[["arc",["osstr"]],["osstr"]]]],[11,"from",R[248],"Creates an `IpAddr::V4` from a four element byte array.",66,[[],["ipaddr"]]],[11,"from",R[53],"Converts a [`NulError`] into a [`io::Error`].",74,[[["nulerror"]],["error"]]],[11,"from",R[243],E,113,[[["cstr"]],[["cstr"],["arc",["cstr"]]]]],[11,"from",R[248],"Converts a [`SocketAddrV6`] into a [`SocketAddr::V6`].",67,[[[R[259]]],[R[65]]]],[11,"from",R[243],E,113,[[["osstr"]],[["arc",["osstr"]],["osstr"]]]],[11,"from",R[248],E,66,[[[R[254]]],["ipaddr"]]],[11,"drop",R[244],E,119,[[["self"]]]],[11,"from",E,E,47,[[[T]],["poll"]]],[11,"deref",R[249],E,133,[[["self"]]]],[11,"hash",E,E,133,[[["self"],["__h"]]]],[11,"hash",R[244],E,47,[[["self"],["__h"]]]],[11,"clone",E,E,119,[[["self"]],["waker"]]],[11,"clone",E,E,47,[[["self"]],["poll"]]],[11,"clone",R[249],E,133,[[["self"]],["pin"]]],[11,R[163],R[244],E,47,[[["poll"],["self"]],[[R[178]],["option",[R[178]]]]]],[11,"lt",E,E,47,[[["poll"],["self"]],["bool"]]],[11,"le",E,E,47,[[["poll"],["self"]],["bool"]]],[11,"gt",E,E,47,[[["poll"],["self"]],["bool"]]],[11,"ge",E,E,47,[[["poll"],["self"]],["bool"]]],[11,R[163],R[249],E,133,[[["self"],["pin"]],[[R[178]],["option",[R[178]]]]]],[11,"lt",E,E,133,[[["self"],["pin"]],["bool"]]],[11,"le",E,E,133,[[["self"],["pin"]],["bool"]]],[11,"gt",E,E,133,[[["self"],["pin"]],["bool"]]],[11,"ge",E,E,133,[[["self"],["pin"]],["bool"]]],[11,"fmt",E,E,133,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"poll",E,E,133,[[[R[62]],["pin",["pin"]],["pin"]],["poll"]]],[11,"fmt",E,E,133,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[244],E,119,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[249],E,133,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[244],E,47,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,118,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,R[268],R[249],E,133,[[["self"]]]],[11,R[269],R[244],E,47,[[],[R[2]]]],[11,R[270],E,E,47,[[],[["poll",[R[2]]],[R[2]]]]],[11,"from_ok",E,E,47,[[],[["poll",[R[2]]],[R[2]]]]],[11,R[269],E,E,47,[[],[R[2]]]],[11,R[270],E,E,47,[[],[["option",[R[2]]],["poll",["option"]]]]],[11,"from_ok",E,E,47,[[],[["option",[R[2]]],["poll",["option"]]]]],[11,"resume",R[249],E,133,[[["pin",["pin"]],["pin"]],[R[272]]]],[11,"eq",R[244],E,47,[[["poll"],["self"]],["bool"]]],[11,"ne",E,E,47,[[["poll"],["self"]],["bool"]]],[11,"eq",R[249],E,133,[[["self"],["pin"]],["bool"]]],[11,"ne",E,E,133,[[["self"],["pin"]],["bool"]]],[11,"cmp",R[244],E,47,[[["poll"],["self"]],[R[178]]]],[11,"cmp",R[249],E,133,[[["pin"],["self"]],[R[178]]]],[11,R[238],R[243],E,113,[[["arc"]],[["arc"],[R[2],["arc"]]]]],[11,R[271],E,"Takes each element in the `Iterator` and collects it intoвЂ¦",113,[[["i"]],["arc"]]],[11,"deref",E,E,113,[[["self"]],[T]]],[11,"eq",E,"Equality for two `Arc`s.",113,[[["arc"],["self"]],["bool"]]],[11,"ne",E,"Inequality for two `Arc`s.",113,[[["arc"],["self"]],["bool"]]],[11,"fmt",E,E,113,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"borrow",E,E,113,[[["self"]],[T]]],[11,"fmt",E,E,114,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,113,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,"as_ref",E,E,113,[[["self"]],[T]]],[11,"cmp",E,"Comparison for two `Arc`s.",113,[[["arc"],["self"]],[R[178]]]],[11,"clone",E,"Makes a clone of the `Arc` pointer.",113,[[["self"]],["arc"]]],[11,"clone",E,"Makes a clone of the `Weak` pointer that points to theвЂ¦",114,[[["self"]],["weak"]]],[11,"drop",E,"Drops the `Weak` pointer.",114,[[["self"]]]],[11,"drop",E,"Drops the `Arc`.",113,[[["self"]]]],[11,"hash",E,E,113,[[["self"],["h"]]]],[11,"resume",R[249],E,133,[[["pin",["pin"]],["pin"]],[R[272]]]],[11,"fmt",R[243],E,113,[[[R[262]],["self"]],[[R[2],["error"]],["error"]]]],[11,R[163],E,"Partial comparison for two `Arc`s.",113,[[["arc"],["self"]],[[R[178]],["option",[R[178]]]]]],[11,"lt",E,"Less-than comparison for two `Arc`s.",113,[[["arc"],["self"]],["bool"]]],[11,"le",E,"'Less than or equal to' comparison for two `Arc`s.",113,[[["arc"],["self"]],["bool"]]],[11,"gt",E,"Greater-than comparison for two `Arc`s.",113,[[["arc"],["self"]],["bool"]]],[11,"ge",E,"'Greater than or equal to' comparison for two `Arc`s.",113,[[["arc"],["self"]],["bool"]]],[11,R[303],E,"Constructs a new `Weak<T>`, without allocating memory.вЂ¦",114,[[],["weak"]]],[11,R[303],E,"Creates a new `Arc<T>`, with the `Default` value for `T`.",113,[[],["arc"]]],[11,"from",R[249],"Converts a `Box<T>` into a `Pin<Box<T>>`",133,[[["box"]],[["pin",["box"]],["box"]]]],[11,"from",R[243],E,113,[[["box"]],["arc"]]],[11,"from",E,E,113,[[["vec"]],["arc"]]],[11,"from",E,E,113,[[[T]],["arc"]]],[11,"from",E,E,113,[[[R[60]]],[["str"],["arc",["str"]]]]],[11,"from",E,E,113,[[],["arc"]]],[11,"from",E,E,113,[[["str"]],[["str"],["arc",["str"]]]]],[11,R[273],R[249],E,133,[[[R[62]],["pin",["pin"]],["pin"]],[["option"],["poll",["option"]]]]],[11,R[276],E,E,133,[[["self"]]]],[11,R[274],E,E,133,[[["self"]],["bool"]]],[11,R[274],E,E,133,[[["self"]],["bool"]]],[11,"register",R[243],E,113,[[["poll"],["pollopt"],["ready"],["self"],["token"]],[[R[2],["error"]],["error"]]]],[11,"reregister",E,E,113,[[["poll"],["pollopt"],["ready"],["self"],["token"]],[[R[2],["error"]],["error"]]]],[11,"deregister",E,E,113,[[["poll"],["self"]],[[R[2],["error"]],["error"]]]],[11,"from",R[53],E,74,[[["error"]],["error"]]],[11,R[274],R[249],E,133,[[["self"]],["bool"]]],[11,R[275],E,E,133,[[]]],[11,"drop",E,E,133,[[]]],[11,R[275],E,E,133,[[]]],[11,"drop",E,E,133,[[]]],[11,R[275],E,E,133,[[]]],[11,"drop",E,E,133,[[]]],[11,R[275],E,E,133,[[]]],[11,"drop",E,E,133,[[]]],[11,R[275],E,E,133,[[]]],[11,"drop",E,E,133,[[]]],[11,R[273],E,E,133,[[[R[62]],["pin",["pin"]],["pin"]],[["option"],["poll",["option"]]]]],[11,R[276],E,E,133,[[["self"]]]],[11,R[274],E,E,133,[[["self"]],["bool"]]],[11,"poll_ready",E,E,133,[[[R[62]],["pin",["pin"]],["pin"]],[[R[2]],["poll",[R[2]]]]]],[11,"start_send",E,E,133,[[["pin",["pin"]],["pin"],["item"]],[R[2]]]],[11,R[277],E,E,133,[[[R[62]],["pin",["pin"]],["pin"]],[[R[2]],["poll",[R[2]]]]]],[11,R[278],E,E,133,[[[R[62]],["pin",["pin"]],["pin"]],[[R[2]],["poll",[R[2]]]]]],[11,R[279],E,E,133,[[["pin",["pin"]],["pin"],[R[62]]],[[R[2],["usize","error"]],["poll",[R[2]]]]]],[11,R[280],E,E,133,[[["pin",["pin"]],["pin"],[R[62]]],[[R[2],["usize","error"]],["poll",[R[2]]]]]],[11,R[277],E,E,133,[[[R[62]],["pin",["pin"]],["pin"]],[["poll",[R[2]]],[R[2],["error"]]]]],[11,R[278],E,E,133,[[[R[62]],["pin",["pin"]],["pin"]],[["poll",[R[2]]],[R[2],["error"]]]]],[11,R[281],E,E,133,[[["pin",["pin"]],["pin"],[R[62]]],[[R[2],["usize","error"]],["poll",[R[2]]]]]],[11,R[282],E,E,133,[[["pin",["pin"]],["pin"],[R[62]]],[[R[2],["usize","error"]],["poll",[R[2]]]]]],[11,R[283],E,E,133,[[["pin",["pin"]],["pin"],[R[62]],[R[37]]],[["poll",[R[2]]],[R[2],["u64","error"]]]]],[11,R[284],E,E,133,[[[R[62]],["pin",["pin"]],["pin"]],[["poll",[R[2]]],[R[2],["error"]]]]],[11,R[285],E,E,133,[[["pin",["pin"]],["pin"],["usize"]]]],[11,R[279],E,E,133,[[["pin",["pin"]],["pin"],[R[62]]],[[R[2],["usize","error"]],["poll",[R[2]]]]]],[11,R[280],E,E,133,[[["pin",["pin"]],["pin"],[R[62]]],[[R[2],["usize","error"]],["poll",[R[2]]]]]],[11,R[277],E,E,133,[[[R[62]],["pin",["pin"]],["pin"]],[["poll",[R[2]]],[R[2],["error"]]]]],[11,R[278],E,E,133,[[[R[62]],["pin",["pin"]],["pin"]],[["poll",[R[2]]],[R[2],["error"]]]]],[11,R[281],E,E,133,[[["pin",["pin"]],["pin"],[R[62]]],[[R[2],["usize","error"]],["poll",[R[2]]]]]],[11,R[282],E,E,133,[[["pin",["pin"]],["pin"],[R[62]]],[[R[2],["usize","error"]],["poll",[R[2]]]]]],[11,R[283],E,E,133,[[["pin",["pin"]],["pin"],[R[62]],[R[37]]],[["poll",[R[2]]],[R[2],["u64","error"]]]]],[11,R[284],E,E,133,[[[R[62]],["pin",["pin"]],["pin"]],[["poll",[R[2]]],[R[2],["error"]]]]],[11,R[285],E,E,133,[[["pin",["pin"]],["pin"],["usize"]]]],[11,"poll",E,E,133,[[["pin"],["self"],[R[62]]],["poll"]]],[11,R[284],E,E,133,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[285],E,E,133,[[["pin"],["self"],["usize"]]]],[11,R[284],R[53],E,8,[[["pin"],["self"],[R[62]]],[[R[2]],["poll",[R[2]]]]]],[11,R[285],E,E,8,[[["pin"],["self"],["usize"]]]],[11,R[284],E,E,10,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[285],E,E,10,[[["pin"],["self"],["usize"]]]],[11,R[284],E,E,79,[[["pin"],["self"],[R[62]]],[[R[2]],["poll",[R[2]]]]]],[11,R[285],E,E,79,[[["pin"],["self"],["usize"]]]],[11,R[281],R[249],E,133,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[281],R[53],E,8,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[282],E,E,8,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[281],E,E,10,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[282],E,E,10,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[281],E,E,79,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[281],E,E,80,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[281],E,E,12,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[281],E,E,83,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[281],R[242],E,26,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[281],R[245],E,54,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[281],R[248],E,69,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[282],E,E,69,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[283],R[249],E,133,[[["pin"],[R[37]],["self"],[R[62]]],[[R[2],["u64"]],["poll",[R[2]]]]]],[11,R[283],R[53],"Seeks to an offset, in bytes, in the underlying reader.",8,[[["pin"],[R[37]],["self"],[R[62]]],[[R[2],["u64"]],["poll",[R[2]]]]]],[11,R[283],E,"Seek to the offset, in bytes, in the underlying writer.",9,[[["pin"],[R[37]],["self"],[R[62]]],[[R[2],["u64"]],["poll",[R[2]]]]]],[11,R[283],E,E,10,[[["pin"],[R[37]],["self"],[R[62]]],[[R[2],["u64"]],["poll",[R[2]]]]]],[11,R[283],R[245],E,54,[[["pin"],[R[37]],["self"],[R[62]]],[[R[2],["u64"]],["poll",[R[2]]]]]],[11,R[279],R[249],E,133,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[277],E,E,133,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[278],E,E,133,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[279],R[53],E,9,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[277],E,E,9,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[278],E,E,9,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[279],E,E,10,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[280],E,E,10,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[277],E,E,10,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[278],E,E,10,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[279],E,E,10,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[278],E,E,10,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[277],E,E,10,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[279],E,E,10,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[278],E,E,10,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[277],E,E,10,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[279],E,E,81,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[277],E,E,81,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[278],E,E,81,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[279],E,E,11,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[277],E,E,11,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[278],E,E,11,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[279],E,E,82,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[277],E,E,82,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[278],E,E,82,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[279],E,E,13,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[277],E,E,13,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[278],E,E,13,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[279],E,E,84,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[277],E,E,84,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[278],E,E,84,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[279],R[242],E,26,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[277],E,E,26,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[278],E,E,26,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[279],R[245],E,54,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[277],E,E,54,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[278],E,E,54,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[279],R[248],E,69,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[280],E,E,69,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,R[277],E,E,69,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[278],E,E,69,[[["pin"],["self"],[R[62]]],[["poll",[R[2]]],[R[2]]]]],[11,R[286],R[53],E,11,[[["self"]],["rawfd"]]],[11,R[286],E,E,12,[[["self"]],["rawfd"]]],[11,R[286],E,E,13,[[["self"]],["rawfd"]]],[11,R[286],R[242],E,24,[[["self"]],["rawfd"]]],[11,R[286],E,E,25,[[["self"]],["rawfd"]]],[11,R[286],E,E,26,[[["self"]],["rawfd"]]],[11,R[286],R[245],E,54,[[["self"]],["rawfd"]]],[11,R[286],R[248],E,68,[[["self"]],["rawfd"]]],[11,R[286],E,E,69,[[["self"]],["rawfd"]]],[11,R[286],E,E,70,[[["self"]],["rawfd"]]],[11,R[287],R[242],E,24,[[["rawfd"]],[R[64]]]],[11,R[287],E,E,25,[[["rawfd"]],[R[294]]]],[11,R[287],E,E,26,[[["rawfd"]],[R[295]]]],[11,R[287],R[245],E,54,[[["rawfd"]],["file"]]],[11,R[287],R[248],E,68,[[["rawfd"]],[R[296]]]],[11,R[287],E,E,69,[[["rawfd"]],[R[297]]]],[11,R[287],E,E,70,[[["rawfd"]],[R[298]]]],[11,R[288],R[242],E,24,[[],["rawfd"]]],[11,R[288],E,E,25,[[],["rawfd"]]],[11,R[288],E,E,26,[[],["rawfd"]]],[11,R[288],R[245],E,54,[[],["rawfd"]]],[11,R[288],R[248],E,68,[[],["rawfd"]]],[11,R[288],E,E,69,[[],["rawfd"]]],[11,R[288],E,E,70,[[],["rawfd"]]],[11,"mode",R[245],E,52,[[["self"],["u32"]],["self"]]],[11,"ino",E,E,53,[[["self"]],["u64"]]],[11,"mode",E,E,57,[[["self"],["u32"]],["self"]]],[11,R[289],E,E,57,[[["self"],["i32"]],["self"]]],[11,R[290],R[53],E,11,[[["self"]],[R[73]]]],[11,R[290],E,E,12,[[["self"]],[R[73]]]],[11,R[290],E,E,13,[[["self"]],[R[73]]]],[11,R[290],R[245],E,54,[[["self"]],[R[73]]]],[11,R[291],E,E,54,[[[R[73]]],["file"]]],[11,R[292],E,E,54,[[],[R[73]]]],[11,R[273],R[53],E,77,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],R[242],E,85,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],R[172],E,92,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,93,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,94,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,95,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,96,[[["pin"],["self"],[R[62]]],[["poll",["option"]],["option"]]]],[11,R[273],E,E,97,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,98,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,99,[[["pin"],["self"],[R[62]]],[["poll",["option"]],["option"]]]],[11,R[273],E,E,100,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,101,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,102,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,103,[[["pin"],["self"],[R[62]]],[["poll",["option"]],["option"]]]],[11,R[273],E,E,104,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,105,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,106,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,107,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,108,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,110,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],R[249],E,133,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],R[172],E,86,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,87,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,88,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,89,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,90,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,91,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,111,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],E,E,112,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],R[243],E,46,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],R[245],E,122,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,R[273],R[248],E,132,[[["pin"],["self"],[R[62]]],[["option"],["poll",["option"]]]]],[11,"extend",R[246],E,64,[[[R[188]],["self"]],[["box",["future"]],["pin",["box"]]]]],[11,R[293],E,E,64,[[[R[188]]],[["box",["future"]],["pin",["box"]]]]],[11,R[293],R[243],E,113,[[[R[188]]],[["box",["future"]],["pin",["box"]]]]],[11,R[260],R[248],E,67,[[["self"]],[R[1]]]],[11,R[260],E,E,130,[[["self"]],[R[1]]]],[11,R[260],E,E,131,[[["self"]],[R[1]]]],[11,"drop",R[243],E,115,[[["self"]]]],[11,"drop",E,E,116,[[["self"]]]],[11,"drop",E,E,117,[[["self"]]]],[11,"drop",E,E,45,[[["self"]]]],[11,"drop",E,E,46,[[["self"]]]],[11,"drop",R[244],E,50,[[["self"]]]],[11,"drop",R[245],E,54,[[["self"]]]],[11,"as_ref",R[246],E,61,[[["self"]],["path"]]],[11,"as_ref",E,E,61,[[["self"]],["osstr"]]],[11,"as_ref",E,E,59,[[["self"]],["path"]]],[11,"as_ref",E,E,62,[[["self"]],["path"]]],[11,"as_ref",E,E,62,[[["self"]],["osstr"]]],[11,"as_ref",E,E,63,[[["self"]],["osstr"]]],[11,"as_ref",E,E,63,[[["self"]],["path"]]],[11,"as_ref",E,E,64,[[["self"]],["path"]]],[11,"as_ref",E,E,63,[[["self"]],["path"]]],[11,"as_ref",E,E,64,[[["self"]],["osstr"]]],[11,"as_ref",E,E,64,[[["self"]],["path"]]],[11,"into",E,E,64,[[],[R[219]]]],[11,"from",R[242],"Converts a `std::os::unix::net::UnixDatagram` into itsвЂ¦",24,[[[R[64]]],[R[64]]]],[11,"from",E,"Converts a `std::os::unix::net::UnixListener` into itsвЂ¦",25,[[[R[294]]],[R[294]]]],[11,"from",E,"Converts a `std::os::unix::net::UnixStream` into itsвЂ¦",26,[[[R[295]]],[R[295]]]],[11,"from",R[243],E,41,[[[T]],["mutex"]]],[11,"from",E,E,42,[[[T]],["rwlock"]]],[11,"from",R[245],E,54,[[["file"]],["file"]]],[11,"from",R[243],"Converts a Path into a Rc by copying the Path data into aвЂ¦",113,[[["path"]],[["arc",["path"]],["path"]]]],[11,"from",R[246],E,64,[[["box",["path"]],["path"]],[R[219]]]],[11,"from",E,E,64,[[[T]],[R[219]]]],[11,"from",E,E,64,[[[R[267]]],[R[219]]]],[11,"from",E,E,64,[[[R[60]]],[R[219]]]],[11,"from",E,E,64,[[["cow",["path"]],["path"]],["self"]]],[11,"from",R[243],E,113,[[[R[219]]],[["arc",["path"]],["path"]]]],[11,"from",R[246],E,64,[[[R[219]]],[R[219]]]],[11,"from",R[248],"Converts a `std::net::TcpListener` into its asynchronousвЂ¦",68,[[[R[296]]],[R[296]]]],[11,"from",E,"Converts a `std::net::TcpStream` into its asynchronousвЂ¦",69,[[[R[297]]],[R[297]]]],[11,"from",E,"Converts a `std::net::UdpSocket` into its asynchronousвЂ¦",70,[[[R[298]]],[R[298]]]],[11,"next",R[246],E,126,[[["self"]],["option"]]],[11,"next",E,E,61,[[["self"]],[[R[263]],["option",[R[263]]]]]],[11,"next",E,E,62,[[["self"]],[["option",["osstr"]],["osstr"]]]],[11,"extend",E,E,64,[[["self"],[R[299]]]]],[11,R[300],E,E,61,[[["self"]],[[R[263]],["option",[R[263]]]]]],[11,R[300],E,E,62,[[["self"]],[["option",["osstr"]],["osstr"]]]],[11,"clone",R[234],E,73,[[["self"]],[R[301]]]],[11,"clone",R[53],E,10,[[["self"]],["cursor"]]],[11,"clone",R[242],E,27,[[["self"]],[R[65]]]],[11,"clone",R[172],E,96,[[["self"]],["fuse"]]],[11,"clone",E,E,103,[[["self"]],["take"]]],[11,"clone",E,E,109,[[["self"]],[R[301]]]],[11,"clone",E,E,87,[[["self"]],["fromfn"]]],[11,"clone",E,E,88,[[["self"]],["fromiter"]]],[11,"clone",E,E,89,[[["self"]],["once"]]],[11,"clone",E,E,90,[[["self"]],[R[9]]]],[11,"clone",E,E,91,[[["self"]],[R[302]]]],[11,"clone",R[243],E,44,[[["self"]],["barrierwaitresult"]]],[11,"clone",E,E,45,[[["self"]],["sender"]]],[11,"clone",E,E,46,[[["self"]],["receiver"]]],[11,"clone",R[244],E,50,[[["self"]],["task"]]],[11,"clone",E,E,120,[[["self"]],["taskid"]]],[11,"clone",E,E,121,[[["self"]],[R[200]]]],[11,"clone",R[245],E,55,[[["self"]],[R[305]]]],[11,"clone",E,E,56,[[["self"]],[R[201]]]],[11,"clone",E,E,57,[[["self"]],[R[207]]]],[11,"clone",E,E,58,[[["self"]],[R[203]]]],[11,"clone",R[246],E,126,[[["self"]],[R[209]]]],[11,"clone",E,E,61,[[["self"]],[R[213]]]],[11,"clone",E,E,62,[[["self"]],["iter"]]],[11,"clone",E,E,64,[[["self"]],[R[219]]]],[11,R[303],R[53],E,10,[[],["cursor"]]],[11,R[303],R[243],E,41,[[],["mutex"]]],[11,R[303],E,E,42,[[],["rwlock"]]],[11,R[303],R[244],E,48,[[],["builder"]]],[11,R[303],R[245],E,52,[[],[R[304]]]],[11,R[303],E,E,57,[[],["self"]]],[11,R[303],R[246],E,64,[[],[R[219]]]],[11,"cmp",E,E,61,[[["self"],[R[213]]],[R[178]]]],[11,"cmp",E,E,63,[[["path"],["self"]],[R[178]]]],[11,"cmp",E,E,64,[[["self"],[R[219]]],[R[178]]]],[11,"eq",R[234],E,73,[[["self"],[R[301]]],["bool"]]],[11,"ne",E,E,73,[[["self"],[R[301]]],["bool"]]],[11,"eq",R[172],E,109,[[[R[301]],["self"]],["bool"]]],[11,"ne",E,E,109,[[[R[301]],["self"]],["bool"]]],[11,"eq",R[244],E,120,[[["taskid"],["self"]],["bool"]]],[11,"ne",E,E,120,[[["taskid"],["self"]],["bool"]]],[11,"eq",E,E,121,[[["self"],[R[200]]],["bool"]]],[11,"ne",E,E,121,[[["self"],[R[200]]],["bool"]]],[11,"eq",R[245],E,55,[[[R[305]],["self"]],["bool"]]],[11,"ne",E,E,55,[[[R[305]],["self"]],["bool"]]],[11,"eq",E,E,58,[[["self"],[R[203]]],["bool"]]],[11,"ne",E,E,58,[[["self"],[R[203]]],["bool"]]],[11,"eq",R[246],E,61,[[["self"],[R[213]]],["bool"]]],[11,"ne",E,E,61,[[["self"],[R[213]]],["bool"]]],[11,"eq",E,E,63,[[["path"],["self"]],["bool"]]],[11,"ne",E,E,63,[[["path"],["self"]],["bool"]]],[11,"eq",E,E,64,[[["path"],["self"]],["bool"]]],[11,"eq",E,E,63,[[["self"],[R[219]]],["bool"]]],[11,"eq",E,E,64,[[["path"],["self"]],["bool"]]],[11,"eq",E,E,63,[[["cow"],["self"]],["bool"]]],[11,"eq",E,E,64,[[["cow"],["self"]],["bool"]]],[11,"eq",E,E,64,[[["self"],["osstr"]],["bool"]]],[11,"eq",E,E,64,[[["self"],["osstr"]],["bool"]]],[11,"eq",E,E,64,[[["self"],["cow"]],["bool"]]],[11,"eq",E,E,64,[[[R[267]],["self"]],["bool"]]],[11,"eq",E,E,63,[[["self"],["osstr"]],["bool"]]],[11,"eq",E,E,63,[[["self"],["osstr"]],["bool"]]],[11,"eq",E,E,63,[[["self"],["cow"]],["bool"]]],[11,"eq",E,E,63,[[[R[267]],["self"]],["bool"]]],[11,"eq",E,E,64,[[["self"],[R[219]]],["bool"]]],[11,"ne",E,E,64,[[["self"],[R[219]]],["bool"]]],[11,R[163],E,E,61,[[["self"],[R[213]]],[[R[178]],["option",[R[178]]]]]],[11,"lt",E,E,61,[[["self"],[R[213]]],["bool"]]],[11,"le",E,E,61,[[["self"],[R[213]]],["bool"]]],[11,"gt",E,E,61,[[["self"],[R[213]]],["bool"]]],[11,"ge",E,E,61,[[["self"],[R[213]]],["bool"]]],[11,R[163],E,E,63,[[["path"],["self"]],[[R[178]],["option",[R[178]]]]]],[11,"lt",E,E,63,[[["path"],["self"]],["bool"]]],[11,"le",E,E,63,[[["path"],["self"]],["bool"]]],[11,"gt",E,E,63,[[["path"],["self"]],["bool"]]],[11,"ge",E,E,63,[[["path"],["self"]],["bool"]]],[11,R[163],E,E,64,[[["path"],["self"]],[["option",[R[178]]],[R[178]]]]],[11,R[163],E,E,63,[[["self"],[R[219]]],[["option",[R[178]]],[R[178]]]]],[11,R[163],E,E,64,[[["path"],["self"]],[["option",[R[178]]],[R[178]]]]],[11,R[163],E,E,63,[[["cow"],["self"]],[["option",[R[178]]],[R[178]]]]],[11,R[163],E,E,64,[[["cow"],["self"]],[["option",[R[178]]],[R[178]]]]],[11,R[163],E,E,64,[[["self"],["osstr"]],[["option",[R[178]]],[R[178]]]]],[11,R[163],E,E,64,[[["self"],["osstr"]],[["option",[R[178]]],[R[178]]]]],[11,R[163],E,E,64,[[["self"],["cow"]],[["option",[R[178]]],[R[178]]]]],[11,R[163],E,E,64,[[[R[267]],["self"]],[["option",[R[178]]],[R[178]]]]],[11,R[163],E,E,63,[[["self"],["osstr"]],[["option",[R[178]]],[R[178]]]]],[11,R[163],E,E,63,[[["self"],["osstr"]],[["option",[R[178]]],[R[178]]]]],[11,R[163],E,E,63,[[["self"],["cow"]],[["option",[R[178]]],[R[178]]]]],[11,R[163],E,E,63,[[[R[267]],["self"]],[["option",[R[178]]],[R[178]]]]],[11,R[163],E,E,64,[[["self"],[R[219]]],[[R[178]],["option",[R[178]]]]]],[11,"lt",E,E,64,[[["self"],[R[219]]],["bool"]]],[11,"le",E,E,64,[[["self"],[R[219]]],["bool"]]],[11,"gt",E,E,64,[[["self"],[R[219]]],["bool"]]],[11,"ge",E,E,64,[[["self"],[R[219]]],["bool"]]],[11,R[240],E,E,63,[[["self"]],[R[219]]]],[11,"fmt",R[234],E,73,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",R[172],E,109,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",R[243],E,115,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,116,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,117,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",R[244],E,120,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,121,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",R[234],E,73,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",R[53],E,77,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,8,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,78,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,9,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,10,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,79,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,80,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,81,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,11,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,82,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,12,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,83,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,13,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,84,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",R[242],E,24,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,25,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,85,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,26,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,27,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",R[172],E,92,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,93,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,94,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,95,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,96,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,97,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,98,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,99,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,100,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,101,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,102,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,103,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,104,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,105,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,106,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,107,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,110,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,109,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,86,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,87,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,88,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,89,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,90,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,91,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,111,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,112,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",R[243],E,41,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,115,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,42,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,116,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,117,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,43,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,44,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,45,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,46,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",R[244],E,48,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,49,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,50,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,120,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,51,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,121,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",R[245],E,52,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,53,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,54,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,55,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,56,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,57,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,58,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,122,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",R[246],E,126,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,61,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,62,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,63,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,64,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",R[248],E,68,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,132,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,69,[[[R[262]],["self"]],[R[2]]]],[11,"fmt",E,E,70,[[[R[262]],["self"]],[R[2]]]],[11,R[257],R[246],E,64,[[["str"]],[R[2]]]],[11,"deref",R[243],E,115,[[["self"]],[T]]],[11,"deref",E,E,116,[[["self"]],[T]]],[11,"deref",E,E,117,[[["self"]],[T]]],[11,"deref",R[246],E,64,[[["self"]],["path"]]],[11,R[268],R[243],E,115,[[["self"]],[T]]],[11,R[268],E,E,117,[[["self"]],[T]]],[11,"hash",R[244],E,120,[[["self"],["__h"]]]],[11,"hash",R[245],E,55,[[["self"],["__h"]]]],[11,"hash",R[246],E,63,[[["self"],["__h"]]]],[11,"hash",E,E,64,[[["self"],["__h"]]]],[11,R[271],E,E,64,[[[R[299]]],[R[219]]]],[11,"borrow",E,E,64,[[["self"]],["path"]]],[11,"poll",R[244],E,49,[[["pin"],["self"],[R[62]]],["poll"]]],[11,"delay",R[234],R[306],0,[[[R[0]]],[R[1]]]],[11,R[85],E,R[307],0,[[],[R[1]]]],[11,"race",E,R[76],0,[[["f"]],[R[1]]]],[11,R[77],E,R[78],0,[[["f"]],[R[1]]]],[11,"join",E,R[79],0,[[["f"]],[R[1]]]],[11,R[80],E,R[81],0,[[["f"]],[[R[2]],[R[1],[R[2]]]]]],[11,"delay",R[98],E,31,[[[R[0]]],[R[308]]]],[11,R[85],E,E,31,[[],[R[309]]]],[11,"race",E,R[76],31,[[["f"]],["race"]]],[11,R[77],E,R[78],31,[[["f"]],["tryrace"]]],[11,"join",E,R[79],31,[[["f"]],["join"]]],[11,R[80],E,R[81],31,[[["f"]],["tryjoin"]]],[11,"new",R[53],"Creates a new I/O error from a known kind of error as wellвЂ¦",74,[[[R[265]],["e"]],["error"]]],[11,"last_os_error",E,"Returns an error representing the last OS error whichвЂ¦",74,[[],["error"]]],[11,"from_raw_os_error",E,"Creates a new instance of an `Error` from a particular OSвЂ¦",74,[[["i32"]],["error"]]],[11,"raw_os_error",E,"Returns the OS error that this error represents (if any).",74,[[["self"]],[["option",["i32"]],["i32"]]]],[11,R[58],E,"Returns a reference to the inner error wrapped by thisвЂ¦",74,[[["self"]],[["option",["error"]],["error"]]]],[11,R[59],E,"Returns a mutable reference to the inner error wrapped byвЂ¦",74,[[["self"]],[["option",["error"]],["error"]]]],[11,R[57],E,"Consumes the `Error`, returning its inner error (if any).",74,[[],[["box",["error"]],["option",["box"]]]]],[11,"kind",E,"Returns the corresponding `ErrorKind` for this error.",74,[[["self"]],[R[265]]]],[11,"new",E,"Creates a new `IoSlice` wrapping a byte slice.",75,[[],["ioslice"]]],[11,"advance",E,R[310],75,[[["usize"]]]],[11,"new",E,"Creates a new `IoSliceMut` wrapping a byte slice.",76,[[],["ioslicemut"]]],[11,"advance",E,R[310],76,[[["usize"]]]],[11,R[10],E,R[11],14,[[["vec"],["self"],["u8"]],[[R[1],["usize"]],["usize"]]]],[11,R[13],E,R[14],14,[[["self"],[R[60]]],[[R[2],["usize"]],[R[1],[R[2]]]]]],[11,"lines",E,R[16],14,[[],["lines"]]],[11,"split",E,R[17],14,[[["u8"]],["split"]]],[11,R[282],E,R[311],15,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,"read",E,R[18],15,[[["self"]],[[R[2],["usize"]],[R[1],[R[2]]]]]],[11,R[20],E,R[21],15,[[["self"]],[[R[2],["usize"]],[R[1],[R[2]]]]]],[11,R[23],E,R[24],15,[[["vec"],["self"]],[[R[2],["usize"]],[R[1],[R[2]]]]]],[11,R[26],E,R[27],15,[[["self"],[R[60]]],[[R[2],["usize"]],[R[1],[R[2]]]]]],[11,R[29],E,R[30],15,[[["self"]],[[R[1],[R[2]]],[R[2]]]]],[11,"take",E,R[32],15,[[["u64"]],["take"]]],[11,"by_ref",E,R[33],15,[[["self"]],["self"]]],[11,"bytes",E,R[34],15,[[],["bytes"]]],[11,"chain",E,R[35],15,[[["read"]],[["chain"],["read"]]]],[11,"seek",E,R[36],16,[[[R[37]],["self"]],[[R[1],[R[2]]],[R[2],["u64"]]]]],[11,R[280],E,R[312],17,[[["pin"],["self"],[R[62]]],[[R[2],["usize"]],["poll",[R[2]]]]]],[11,"write",E,R[39],17,[[["self"]],[[R[2],["usize"]],[R[1],[R[2]]]]]],[11,"flush",E,R[41],17,[[["self"]],[[R[1],[R[2]]],[R[2]]]]],[11,R[43],E,R[44],17,[[["self"]],[[R[2],["usize"]],[R[1],[R[2]]]]]],[11,R[46],E,R[47],17,[[["self"]],[[R[1],[R[2]]],[R[2]]]]],[11,R[49],E,R[50],17,[[["self"],[R[51]]],[[R[1],[R[2]]],[R[2]]]]],[11,"next",R[172],R[99],33,[[["self"]],[["option"],[R[1],["option"]]]]],[11,"take",E,R[101],33,[[["usize"]],["take"]]],[11,R[102],E,R[103],33,[[["p"]],[R[104]]]],[11,R[82],E,R[105],33,[[[R[0]]],[R[82]]]],[11,"step_by",E,R[106],33,[[["usize"]],["stepby"]]],[11,"chain",E,R[107],33,[[[U]],["chain"]]],[11,"cloned",E,R[83],33,[[],["cloned"]]],[11,"copied",E,R[83],33,[[],["copied"]]],[11,"cycle",E,R[108],33,[[],["cycle"]]],[11,R[84],E,R[109],33,[[],[R[84]]]],[11,"map",E,R[110],33,[[["f"]],["map"]]],[11,R[173],E,R[111],33,[[["f"]],[R[173]]]],[11,"last",E,R[112],33,[[],[["option"],[R[1],["option"]]]]],[11,"fuse",E,R[114],33,[[],["fuse"]]],[11,"filter",E,R[115],33,[[["p"]],["filter"]]],[11,R[174],E,R[116],33,[[["f"]],["flatmap"]]],[11,R[85],E,R[117],33,[[],[R[85]]]],[11,R[118],E,R[119],33,[[["f"]],[R[120]]]],[11,R[121],E,R[86],33,[[["f"]],[["option"],[R[1],["option"]]]]],[11,R[123],E,R[87],33,[[["f"]],[["option"],[R[1],["option"]]]]],[11,"min_by",E,R[86],33,[[["f"]],[["option"],[R[1],["option"]]]]],[11,"max",E,R[126],33,[[],[["option"],[R[1],["option"]]]]],[11,"min",E,R[128],33,[[],[["option"],[R[1],["option"]]]]],[11,"max_by",E,R[87],33,[[["f"]],[["option"],[R[1],["option"]]]]],[11,"nth",E,R[131],33,[[["self"],["usize"]],[["option"],[R[1],["option"]]]]],[11,"all",E,R[133],33,[[["self"],["f"]],[[R[1],["bool"]],["bool"]]]],[11,"find",E,R[135],33,[[["self"],["p"]],[["option"],[R[1],["option"]]]]],[11,R[175],E,R[137],33,[[["self"],["f"]],[[R[1],["option"]],["option"]]]],[11,"fold",E,R[88],33,[[["b"],["f"]],[R[1]]]],[11,R[140],E,R[88],33,[[["f"]],[R[1]]]],[11,R[176],E,R[142],33,[[["f"]],[R[1]]]],[11,"any",E,R[144],33,[[["self"],["f"]],[[R[1],["bool"]],["bool"]]]],[11,"by_ref",E,R[146],33,[[["self"]],["self"]]],[11,"scan",E,R[147],33,[[["f"],["st"]],["scan"]]],[11,R[148],E,R[149],33,[[["p"]],[R[150]]]],[11,"skip",E,R[151],33,[[["usize"]],["skip"]]],[11,R[89],E,R[152],33,[[[R[0]]],[R[89]]]],[11,R[177],E,R[153],33,[[["self"],[T],["f"]],[[R[1],[R[2]]],[R[2]]]]],[11,R[155],E,R[156],33,[[["self"],["f"]],[R[1]]]],[11,"zip",E,R[158],33,[[[U]],["zip"]]],[11,"unzip",E,R[159],33,[[],[R[1]]]],[11,"collect",E,R[161],33,[[],[R[1]]]],[11,"merge",E,R[162],33,[[[U]],["merge"]]],[11,R[163],E,R[91],33,[[["s"]],[["option",[R[178]]],[R[1],["option"]]]]],[11,R[90],E,R[165],33,[[["self"],["p"]],[["option",["usize"]],[R[1],["option"]]]]],[11,"cmp",E,R[91],33,[[["s"]],[[R[1],[R[178]]],[R[178]]]]],[11,"count",E,R[168],33,[[],[[R[1],["usize"]],["usize"]]]],[11,"ne",E,R[92],33,[[["s"]],[[R[1],["bool"]],["bool"]]]],[11,"ge",E,R[92],33,[[["s"]],[[R[1],["bool"]],["bool"]]]],[11,"eq",E,R[92],33,[[["s"]],[[R[1],["bool"]],["bool"]]]],[11,"gt",E,R[92],33,[[["s"]],[[R[1],["bool"]],["bool"]]]],[11,"le",E,R[92],33,[[["s"]],[[R[1],["bool"]],["bool"]]]],[11,"lt",E,R[92],33,[[["s"]],[[R[1],["bool"]],["bool"]]]],[11,"sum",E,R[170],33,[[],[R[1]]]],[11,R[313],E,R[171],33,[[],[R[1]]]],[11,"len",E,R[314],35,[[["self"]],["usize"]]],[11,"new",R[243],"Constructs a new `Arc<T>`.",113,[[[T]],["arc"]]],[11,"new_uninit",E,"Constructs a new `Arc` with uninitialized contents.",113,[[],[["arc",[R[315]]],[R[315]]]]],[11,"pin",E,"Constructs a new `Pin<Arc<T>>`. If `T` does not implementвЂ¦",113,[[[T]],[["arc"],["pin",["arc"]]]]],[11,"try_unwrap",E,"Returns the inner value, if the `Arc` has exactly oneвЂ¦",113,[[["arc"]],[["arc"],[R[2],["arc"]]]]],[11,"new_uninit_slice",E,"Constructs a new reference-counted slice withвЂ¦",113,[[["usize"]],["arc"]]],[11,R[316],E,"Converts to `Arc<T>`.",113,[[],["arc"]]],[11,R[316],E,"Converts to `Arc<[T]>`.",113,[[],["arc"]]],[11,R[275],E,"Consumes the `Arc`, returning the wrapped pointer.",113,[[["arc"]]]],[11,R[317],E,"Constructs an `Arc` from a raw pointer.",113,[[],["arc"]]],[11,"into_raw_non_null",E,"Consumes the `Arc`, returning the wrapped pointer asвЂ¦",113,[[["arc"]],["nonnull"]]],[11,"downgrade",E,"Creates a new [`Weak`][weak] pointer to this allocation.",113,[[["arc"]],["weak"]]],[11,R[319],E,"Gets the number of [`Weak`][weak] pointers to thisвЂ¦",113,[[["arc"]],["usize"]]],[11,R[318],E,"Gets the number of strong (`Arc`) pointers to thisвЂ¦",113,[[["arc"]],["usize"]]],[11,"ptr_eq",E,"Returns `true` if the two `Arc`s point to the sameвЂ¦",113,[[["arc"]],["bool"]]],[11,"make_mut",E,"Makes a mutable reference into the given `Arc`.",113,[[["arc"]],[T]]],[11,R[59],E,"Returns a mutable reference into the given `Arc`, if thereвЂ¦",113,[[["arc"]],[["option"],[T]]]],[11,"get_mut_unchecked",E,"Returns a mutable reference into the given `Arc`, withoutвЂ¦",113,[[["arc"]],[T]]],[11,"downcast",E,"Attempt to downcast the `Arc<dyn Any + Send + Sync>` to aвЂ¦",113,[[],[[R[2],["arc","arc"]],["arc"],["arc",["any"]]]]],[11,"new",E,"Constructs a new `Weak<T>`, without allocating any memory.вЂ¦",114,[[],["weak"]]],[11,"as_raw",E,"Returns a raw pointer to the object `T` pointed to by thisвЂ¦",114,[[["self"]]]],[11,R[275],E,"Consumes the `Weak<T>` and turns it into a raw pointer.",114,[[]]],[11,R[317],E,"Converts a raw pointer previously created by [`into_raw`]вЂ¦",114,[[],["weak"]]],[11,"upgrade",E,"Attempts to upgrade the `Weak` pointer to an [`Arc`],вЂ¦",114,[[["self"]],[["option",["arc"]],["arc"]]]],[11,R[318],E,"Gets the number of strong (`Arc`) pointers pointing toвЂ¦",114,[[["self"]],["usize"]]],[11,R[319],E,"Gets an approximation of the number of `Weak` pointersвЂ¦",114,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"ptr_eq",E,"Returns `true` if the two `Weak`s point to the sameвЂ¦",114,[[["weak"],["self"]],["bool"]]],[11,"from_waker",R[244],"Create a new `Context` from a `&Waker`.",118,[[["waker"]],[R[62]]]],[11,"waker",E,"Returns a reference to the `Waker` for the current task.",118,[[["self"]],["waker"]]],[11,"map",E,"Changes the ready value of this `Poll` with the closureвЂ¦",47,[[["f"]],["poll"]]],[11,"is_ready",E,"Returns `true` if this is `Poll::Ready`",47,[[["self"]],["bool"]]],[11,"is_pending",E,"Returns `true` if this is `Poll::Pending`",47,[[["self"]],["bool"]]],[11,"map_ok",E,R[320],47,[[["f"]],[["poll",[R[2]]],[R[2]]]]],[11,"map_err",E,R[321],47,[[["f"]],[[R[2]],["poll",[R[2]]]]]],[11,"map_ok",E,R[320],47,[[["f"]],[["poll",["option"]],["option",[R[2]]]]]],[11,"map_err",E,R[321],47,[[["f"]],[["option",[R[2]]],["poll",["option"]]]]],[11,"wake",E,"Wake up the task associated with this `Waker`.",119,[[]]],[11,"wake_by_ref",E,"Wake up the task associated with this `Waker` withoutвЂ¦",119,[[["self"]]]],[11,"will_wake",E,"Returns `true` if this `Waker` and another `Waker` haveвЂ¦",119,[[["waker"],["self"]],["bool"]]],[11,R[317],E,"Creates a new `Waker` from [`RawWaker`].",119,[[["rawwaker"]],["waker"]]],[11,R[322],R[246],"Extracts the underlying [`OsStr`] slice.",59,[[],["osstr"]]],[11,"is_verbatim",E,"Determines if the prefix is verbatim, i.e., begins withвЂ¦",60,[[["self"]],["bool"]]],[11,"kind",E,"Returns the parsed prefix data.",124,[[["self"]],["prefix"]]],[11,R[322],E,"Returns the raw [`OsStr`] slice for this prefix.",124,[[["self"]],["osstr"]]],[11,R[323],R[248],"Returns [`true`] for the special 'unspecified' address.",66,[[["self"]],["bool"]]],[11,R[324],E,"Returns [`true`] if this is a loopback address.",66,[[["self"]],["bool"]]],[11,R[325],E,R[326],66,[[["self"]],["bool"]]],[11,R[327],E,"Returns [`true`] if this is a multicast address.",66,[[["self"]],["bool"]]],[11,R[328],E,R[329],66,[[["self"]],["bool"]]],[11,"is_ipv4",E,"Returns [`true`] if this address is an [IPv4 address], andвЂ¦",66,[[["self"]],["bool"]]],[11,"is_ipv6",E,"Returns [`true`] if this address is an [IPv6 address], andвЂ¦",66,[[["self"]],["bool"]]],[11,"new",E,"Creates a new IPv4 address from four eight-bit octets.",128,[[["u8"]],[R[256]]]],[18,R[330],E,"An IPv4 address with the address pointing to localhost:вЂ¦",128,N],[18,R[331],E,"An IPv4 address representing an unspecified address: 0.0.0.0",128,N],[18,"BROADCAST",E,"An IPv4 address representing the broadcast address:вЂ¦",128,N],[11,"octets",E,"Returns the four eight-bit integers that make up thisвЂ¦",128,[[["self"]]]],[11,R[323],E,"Returns [`true`] for the special 'unspecified' addressвЂ¦",128,[[["self"]],["bool"]]],[11,R[324],E,"Returns [`true`] if this is a loopback addressвЂ¦",128,[[["self"]],["bool"]]],[11,"is_private",E,"Returns [`true`] if this is a private address.",128,[[["self"]],["bool"]]],[11,"is_link_local",E,"Returns [`true`] if the address is link-localвЂ¦",128,[[["self"]],["bool"]]],[11,R[325],E,R[326],128,[[["self"]],["bool"]]],[11,"is_shared",E,"Returns [`true`] if this address is part of the SharedвЂ¦",128,[[["self"]],["bool"]]],[11,"is_ietf_protocol_assignment",E,"Returns [`true`] if this address is part ofвЂ¦",128,[[["self"]],["bool"]]],[11,"is_benchmarking",E,"Returns [`true`] if this address part of theвЂ¦",128,[[["self"]],["bool"]]],[11,"is_reserved",E,"Returns [`true`] if this address is reserved by IANA forвЂ¦",128,[[["self"]],["bool"]]],[11,R[327],E,"Returns [`true`] if this is a multicast addressвЂ¦",128,[[["self"]],["bool"]]],[11,"is_broadcast",E,"Returns [`true`] if this is a broadcast addressвЂ¦",128,[[["self"]],["bool"]]],[11,R[328],E,R[329],128,[[["self"]],["bool"]]],[11,"to_ipv6_compatible",E,"Converts this address to an IPv4-compatible [IPv6 address].",128,[[["self"]],[R[254]]]],[11,"to_ipv6_mapped",E,"Converts this address to an IPv4-mapped [IPv6 address].",128,[[["self"]],[R[254]]]],[11,"new",E,"Creates a new IPv6 address from eight 16-bit segments.",129,[[["u16"]],[R[254]]]],[18,R[330],E,"An IPv6 address representing localhost: `::1`.",129,N],[18,R[331],E,"An IPv6 address representing the unspecified address: `::`",129,N],[11,"segments",E,"Returns the eight 16-bit segments that make up this address.",129,[[["self"]]]],[11,R[323],E,"Returns [`true`] for the special 'unspecified' address (::).",129,[[["self"]],["bool"]]],[11,R[324],E,"Returns [`true`] if this is a loopback address (::1).",129,[[["self"]],["bool"]]],[11,R[325],E,R[326],129,[[["self"]],["bool"]]],[11,"is_unique_local",E,"Returns [`true`] if this is a unique local addressвЂ¦",129,[[["self"]],["bool"]]],[11,"is_unicast_link_local_strict",E,R[332],129,[[["self"]],["bool"]]],[11,"is_unicast_link_local",E,R[332],129,[[["self"]],["bool"]]],[11,"is_unicast_site_local",E,"Returns [`true`] if this is a deprecated unicastвЂ¦",129,[[["self"]],["bool"]]],[11,R[328],E,"Returns [`true`] if this is an address reserved forвЂ¦",129,[[["self"]],["bool"]]],[11,"is_unicast_global",E,"Returns [`true`] if the address is a globally routableвЂ¦",129,[[["self"]],["bool"]]],[11,"multicast_scope",E,"Returns the address's multicast scope if the address isвЂ¦",129,[[["self"]],[["option",[R[333]]],[R[333]]]]],[11,R[327],E,"Returns [`true`] if this is a multicast address (ff00::/8).",129,[[["self"]],["bool"]]],[11,"to_ipv4",E,"Converts this address to an [IPv4 address]. ReturnsвЂ¦",129,[[["self"]],[[R[256]],["option",[R[256]]]]]],[11,"octets",E,"Returns the sixteen eight-bit integers the IPv6 addressвЂ¦",129,[[["self"]]]],[11,"new",E,"Creates a new socket address from an [IP address] and aвЂ¦",67,[[["u16"],["ipaddr"]],[R[65]]]],[11,"ip",E,R[335],67,[[["self"]],["ipaddr"]]],[11,"set_ip",E,R[336],67,[[["self"],["ipaddr"]]]],[11,"port",E,R[337],67,[[["self"]],["u16"]]],[11,R[339],E,R[338],67,[[["u16"],["self"]]]],[11,"is_ipv4",E,R[334],67,[[["self"]],["bool"]]],[11,"is_ipv6",E,R[334],67,[[["self"]],["bool"]]],[11,"new",E,"Creates a new socket address from an [IPv4 address] and aвЂ¦",130,[[["u16"],[R[256]]],[R[258]]]],[11,"ip",E,R[335],130,[[["self"]],[R[256]]]],[11,"set_ip",E,R[336],130,[[["self"],[R[256]]]]],[11,"port",E,R[337],130,[[["self"]],["u16"]]],[11,R[339],E,R[338],130,[[["u16"],["self"]]]],[11,"new",E,"Creates a new socket address from an [IPv6 address], aвЂ¦",131,[[["u32"],[R[254]],["u16"]],[R[259]]]],[11,"ip",E,R[335],131,[[["self"]],[R[254]]]],[11,"set_ip",E,R[336],131,[[["self"],[R[254]]]]],[11,"port",E,R[337],131,[[["self"]],["u16"]]],[11,R[339],E,R[338],131,[[["u16"],["self"]]]],[11,"flowinfo",E,"Returns the flow information associated with this address.",131,[[["self"]],["u32"]]],[11,"set_flowinfo",E,"Changes the flow information associated with this socketвЂ¦",131,[[["self"],["u32"]]]],[11,"scope_id",E,"Returns the scope ID associated with this address.",131,[[["self"]],["u32"]]],[11,"set_scope_id",E,"Changes the scope ID associated with this socket address.",131,[[["self"],["u32"]]]],[11,"new",R[249],"Construct a new `Pin<P>` around a pointer to some data ofвЂ¦",133,[[["p"]],["pin"]]],[11,R[57],E,R[340],133,[[["pin"]],["p"]]],[11,"new_unchecked",E,"Construct a new `Pin<P>` around a reference to some dataвЂ¦",133,[[["p"]],["pin"]]],[11,"as_ref",E,"Gets a pinned shared reference from this pinned pointer.",133,[[["self"]],["pin"]]],[11,"into_inner_unchecked",E,R[340],133,[[["pin"]],["p"]]],[11,"as_mut",E,"Gets a pinned mutable reference from this pinned pointer.",133,[[["self"]],["pin"]]],[11,"set",E,"Assigns a new value to the memory behind the pinnedвЂ¦",133,[[["self"]]]],[11,"map_unchecked",E,"Constructs a new pin by mapping the interior value.",133,[[["f"]],[[U],["pin"]]]],[11,R[58],E,"Gets a shared reference out of a pin.",133,[[],[T]]],[11,"into_ref",E,"Converts this `Pin<&mut T>` into a `Pin<&T>` with the sameвЂ¦",133,[[],[["pin"],[T]]]],[11,R[59],E,R[341],133,[[],[T]]],[11,"get_unchecked_mut",E,R[341],133,[[],[T]]],[11,"map_unchecked_mut",E,"Construct a new pin by mapping the interior value.",133,[[["f"]],[["pin"],[U]]]],[11,"success",R[252],"Was termination successful? Signal termination is notвЂ¦",134,[[["self"]],["bool"]]],[11,"code",E,"Returns the exit code of the process, if any.",134,[[["self"]],[["option",["i32"]],["i32"]]]]],"p":[[8,R[5]],[8,R[342]],[4,R[343]],[4,"SeekFrom"],[8,R[344]],[8,"ReadExt"],[8,"SeekExt"],[8,"WriteExt"],[3,R[345]],[3,R[346]],[3,"Cursor"],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[8,"BufRead"],[8,"Read"],[8,"Seek"],[8,"Write"],[8,"AsRawFd"],[8,R[347]],[8,R[348]],[8,R[349]],[8,R[350]],[8,R[351]],[3,R[352]],[3,R[353]],[3,R[354]],[3,R[222]],[8,R[355]],[8,R[356]],[8,R[357]],[8,R[358]],[8,R[179]],[8,"Stream"],[8,R[359]],[8,R[360]],[8,"Extend"],[8,R[361]],[8,R[189]],[8,"Product"],[8,"Sum"],[3,"Mutex"],[3,"RwLock"],[3,"Barrier"],[3,R[362]],[3,"Sender"],[3,"Receiver"],[4,"Poll"],[3,"Builder"],[3,R[363]],[3,"Task"],[3,"LocalKey"],[3,R[364]],[3,"DirEntry"],[3,"File"],[3,"FileType"],[3,"Metadata"],[3,R[365]],[3,R[366]],[4,R[367]],[4,"Prefix"],[3,R[368]],[3,"Iter"],[3,"Path"],[3,"PathBuf"],[4,"Shutdown"],[4,"IpAddr"],[4,R[222]],[3,R[369]],[3,R[370]],[3,R[371]],[8,R[372]],[3,R[3]],[3,R[93]],[3,"Error"],[3,"IoSlice"],[3,R[373]],[3,"Lines"],[3,R[374]],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,R[375]],[3,R[376]],[3,R[377]],[3,R[378]],[3,"Empty"],[3,"FromFn"],[3,"FromIter"],[3,"Once"],[3,"Repeat"],[3,R[379]],[3,"Chain"],[3,"Cloned"],[3,"Copied"],[3,"Filter"],[3,"Fuse"],[3,"Inspect"],[3,"Map"],[3,"Scan"],[3,"Skip"],[3,R[380]],[3,"StepBy"],[3,"Take"],[3,R[381]],[3,"Zip"],[3,"Merge"],[3,"Flatten"],[3,"FlatMap"],[3,R[93]],[3,"Timeout"],[3,"Interval"],[3,R[382]],[3,"Arc"],[3,"Weak"],[3,R[383]],[3,R[384]],[3,R[385]],[3,"Context"],[3,"Waker"],[3,"TaskId"],[3,R[386]],[3,"ReadDir"],[3,"Display"],[3,R[387]],[3,R[388]],[3,R[389]],[3,R[390]],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,R[391]],[3,R[392]],[3,R[378]],[3,"Pin"],[3,R[393]]]};
addSearchOptions(searchIndex);initSearch(searchIndex);
